{"numFailedTestSuites":5,"numFailedTests":41,"numPassedTestSuites":13,"numPassedTests":309,"numPendingTestSuites":1,"numPendingTests":1,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":19,"numTotalTests":351,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1758279148998,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["MultiIntentProcessor","Multi-Intent Detection"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"actual":"unclear","expected":"schedule_create","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"schedule_create\"\u001b[39m\nReceived: \u001b[31m\"unclear\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"schedule_create\"\u001b[39m\nReceived: \u001b[31m\"unclear\"\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:89:41)"],"fullName":"MultiIntentProcessor Multi-Intent Detection should detect multiple intents in compound request","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150028,"status":"failed","title":"should detect multiple intents in compound request"},{"ancestorTitles":["MultiIntentProcessor","Multi-Intent Detection"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m\"schedule_create\"\u001b[39m\nReceived array: \u001b[31m[\"fallback_schedule_create\", \"fallback_schedule_edit\"]\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m\"schedule_create\"\u001b[39m\nReceived array: \u001b[31m[\"fallback_schedule_create\", \"fallback_schedule_edit\"]\u001b[39m\n    at Object.toContain (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:103:46)"],"fullName":"MultiIntentProcessor Multi-Intent Detection should fall back to rule-based detection on AI failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150038,"status":"failed","title":"should fall back to rule-based detection on AI failure"},{"ancestorTitles":["MultiIntentProcessor","Multi-Intent Detection"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":"unclear","expected":"schedule_create","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"schedule_create\"\u001b[39m\nReceived: \u001b[31m\"unclear\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"schedule_create\"\u001b[39m\nReceived: \u001b[31m\"unclear\"\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:123:41)"],"fullName":"MultiIntentProcessor Multi-Intent Detection should return single intent for simple requests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150040,"status":"failed","title":"should return single intent for simple requests"},{"ancestorTitles":["MultiIntentProcessor","Multi-Intent Detection"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThanOrEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: <= \u001b[32m5\u001b[39m\nReceived:    \u001b[31m10\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThanOrEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: <= \u001b[32m5\u001b[39m\nReceived:    \u001b[31m10\u001b[39m\n    at Object.toBeLessThanOrEqual (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:142:36)"],"fullName":"MultiIntentProcessor Multi-Intent Detection should limit number of intents to maximum allowed","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150041,"status":"failed","title":"should limit number of intents to maximum allowed"},{"ancestorTitles":["MultiIntentProcessor","Compound Intent Processing"],"duration":5,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'toUpperCase')\n    at toUpperCase (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/errors.ts:488:23)\n    at MultiIntentProcessor.processMultiIntent (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/multi-intent-processor.ts:213:36)\n    at Object.<anonymous> (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:157:28)"],"fullName":"MultiIntentProcessor Compound Intent Processing should process single intent as simple compound","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150041,"status":"failed","title":"should process single intent as simple compound"},{"ancestorTitles":["MultiIntentProcessor","Compound Intent Processing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiIntentProcessor Compound Intent Processing should process multiple intents as compound","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150046,"status":"passed","title":"should process multiple intents as compound"},{"ancestorTitles":["MultiIntentProcessor","Compound Intent Processing"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:206:64)"],"fullName":"MultiIntentProcessor Compound Intent Processing should analyze intent relationships","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150047,"status":"failed","title":"should analyze intent relationships"},{"ancestorTitles":["MultiIntentProcessor","Compound Intent Processing"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBeDefined (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:236:32)"],"fullName":"MultiIntentProcessor Compound Intent Processing should create proper execution order","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150048,"status":"failed","title":"should create proper execution order"},{"ancestorTitles":["MultiIntentProcessor","Conflict Analysis"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:268:45)"],"fullName":"MultiIntentProcessor Conflict Analysis should detect conflicting intents","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150049,"status":"failed","title":"should detect conflicting intents"},{"ancestorTitles":["MultiIntentProcessor","Conflict Analysis"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:288:53)"],"fullName":"MultiIntentProcessor Conflict Analysis should require confirmation for risky operations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150049,"status":"failed","title":"should require confirmation for risky operations"},{"ancestorTitles":["MultiIntentProcessor","Conflict Analysis"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiIntentProcessor Conflict Analysis should prevent immediate execution for complex operations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150050,"status":"passed","title":"should prevent immediate execution for complex operations"},{"ancestorTitles":["MultiIntentProcessor","Execution Suggestions"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:340:51)"],"fullName":"MultiIntentProcessor Execution Suggestions should suggest operation reordering for efficiency","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150050,"status":"failed","title":"should suggest operation reordering for efficiency"},{"ancestorTitles":["MultiIntentProcessor","Execution Suggestions"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:365:45)"],"fullName":"MultiIntentProcessor Execution Suggestions should suggest merging similar operations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150050,"status":"failed","title":"should suggest merging similar operations"},{"ancestorTitles":["MultiIntentProcessor","Execution Suggestions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiIntentProcessor Execution Suggestions should suggest confirmation for error conditions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150050,"status":"passed","title":"should suggest confirmation for error conditions"},{"ancestorTitles":["MultiIntentProcessor","Execution Planning"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"expected":3,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m3\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m3\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:421:42)"],"fullName":"MultiIntentProcessor Execution Planning should assign appropriate priorities to execution steps","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150051,"status":"failed","title":"should assign appropriate priorities to execution steps"},{"ancestorTitles":["MultiIntentProcessor","Execution Planning"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m45000\u001b[39m\nReceived:   \u001b[31m30000\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m45000\u001b[39m\nReceived:   \u001b[31m30000\u001b[39m\n    at Object.toBeGreaterThan (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:447:44)"],"fullName":"MultiIntentProcessor Execution Planning should estimate execution times for steps","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150051,"status":"failed","title":"should estimate execution times for steps"},{"ancestorTitles":["MultiIntentProcessor","Execution Planning"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiIntentProcessor Execution Planning should identify parallelizable operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150052,"status":"passed","title":"should identify parallelizable operations"},{"ancestorTitles":["MultiIntentProcessor","Error Handling"],"duration":1,"failing":false,"failureDetails":[{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{\"canExecuteImmediately\": true, \"compoundIntent\": {\"complexity\": \"simple\", \"confidence\": 0.3, \"executionOrder\": [{\"canParallelize\": false, \"entities\": [], \"estimatedDuration\": 30000, \"id\": \"step_fallback_unclear_1758279150052\", \"intent\": {\"category\": \"unclear\", \"confidence\": 0.3, \"entities\": [], \"name\": \"fallback_unclear\", \"parameters\": {}}, \"prerequisites\": [], \"priority\": 2}], \"id\": \"single_1758279150052\", \"primaryIntent\": {\"category\": \"unclear\", \"confidence\": 0.3, \"entities\": [], \"name\": \"fallback_unclear\", \"parameters\": {}}, \"relationships\": [], \"secondaryIntents\": []}, \"confidence\": 0.3, \"processingTime\": 0, \"requiresUserConfirmation\": false, \"suggestions\": [], \"warnings\": []}\u001b[39m"}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31m{\"canExecuteImmediately\": true, \"compoundIntent\": {\"complexity\": \"simple\", \"confidence\": 0.3, \"executionOrder\": [{\"canParallelize\": false, \"entities\": [], \"estimatedDuration\": 30000, \"id\": \"step_fallback_unclear_1758279150052\", \"intent\": {\"category\": \"unclear\", \"confidence\": 0.3, \"entities\": [], \"name\": \"fallback_unclear\", \"parameters\": {}}, \"prerequisites\": [], \"priority\": 2}], \"id\": \"single_1758279150052\", \"primaryIntent\": {\"category\": \"unclear\", \"confidence\": 0.3, \"entities\": [], \"name\": \"fallback_unclear\", \"parameters\": {}}, \"relationships\": [], \"secondaryIntents\": []}, \"confidence\": 0.3, \"processingTime\": 0, \"requiresUserConfirmation\": false, \"suggestions\": [], \"warnings\": []}\u001b[39m\n    at expect (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js:2116:15)\n    at Object.expect (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:482:19)\n    at Promise.finally.completed (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)\n    at _callCircusTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)\n    at _runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)\n    at jestAdapter (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"MultiIntentProcessor Error Handling should handle processing errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150052,"status":"failed","title":"should handle processing errors gracefully"},{"ancestorTitles":["MultiIntentProcessor","Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiIntentProcessor Error Handling should validate intent confidence thresholds","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150053,"status":"passed","title":"should validate intent confidence thresholds"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: (0 , _multiIntentProcessor.processMultipleIntents) is not a function\n    at Object.<anonymous> (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:540:52)\n    at Promise.finally.completed (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)\n    at _callCircusTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)\n    at _runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)\n    at jestAdapter (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Convenience Functions should process multiple intents using convenience function","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150054,"status":"failed","title":"should process multiple intents using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m2\u001b[39m\nReceived length: \u001b[31m1\u001b[39m\nReceived array:  \u001b[31m[{\"category\": \"unclear\", \"confidence\": 0.8, \"entities\": [], \"name\": \"schedule_create\", \"parameters\": {}}]\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m2\u001b[39m\nReceived length: \u001b[31m1\u001b[39m\nReceived array:  \u001b[31m[{\"category\": \"unclear\", \"confidence\": 0.8, \"entities\": [], \"name\": \"schedule_create\", \"parameters\": {}}]\u001b[39m\n    at Object.toHaveLength (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts:558:25)"],"fullName":"Convenience Functions should detect multiple intents using convenience function","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150054,"status":"failed","title":"should detect multiple intents using convenience function"}],"endTime":1758279150093,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Multi-Intent Detection › should detect multiple intents in compound request\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"schedule_create\"\u001b[39m\n    Received: \u001b[31m\"unclear\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m             expect(intents)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 89 |\u001b[39m             expect(intents[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mcategory)\u001b[33m.\u001b[39mtoBe(\u001b[33mIntentCategory\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSCHEDULE_CREATE\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m             expect(intents[\u001b[35m1\u001b[39m]\u001b[33m.\u001b[39mcategory)\u001b[33m.\u001b[39mtoBe(\u001b[33mIntentCategory\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSCHEDULE_EDIT\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 91 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:89:41)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Multi-Intent Detection › should fall back to rule-based detection on AI failure\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected value: \u001b[32m\"schedule_create\"\u001b[39m\n    Received array: \u001b[31m[\"fallback_schedule_create\", \"fallback_schedule_edit\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 101 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 102 |\u001b[39m             expect(intents)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 103 |\u001b[39m             expect(intents\u001b[33m.\u001b[39mmap(i \u001b[33m=>\u001b[39m i\u001b[33m.\u001b[39mname))\u001b[33m.\u001b[39mtoContain(\u001b[32m'schedule_create'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m             expect(intents\u001b[33m.\u001b[39mmap(i \u001b[33m=>\u001b[39m i\u001b[33m.\u001b[39mname))\u001b[33m.\u001b[39mtoContain(\u001b[32m'schedule_edit'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toContain (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:103:46)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Multi-Intent Detection › should return single intent for simple requests\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"schedule_create\"\u001b[39m\n    Received: \u001b[31m\"unclear\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 121 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 122 |\u001b[39m             expect(intents)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 123 |\u001b[39m             expect(intents[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mcategory)\u001b[33m.\u001b[39mtoBe(\u001b[33mIntentCategory\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSCHEDULE_CREATE\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 124 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 125 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 126 |\u001b[39m         it(\u001b[32m'should limit number of intents to maximum allowed'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:123:41)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Multi-Intent Detection › should limit number of intents to maximum allowed\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThanOrEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: <= \u001b[32m5\u001b[39m\n    Received:    \u001b[31m10\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 140 |\u001b[39m             )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 141 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 142 |\u001b[39m             expect(intents\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// MAX_INTENTS_PER_REQUEST\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 143 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 144 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeLessThanOrEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:142:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Compound Intent Processing › should process single intent as simple compound\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'toUpperCase')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 486 |\u001b[39m     \u001b[36mreturn\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 487 |\u001b[39m         type\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 488 |\u001b[39m         code\u001b[33m:\u001b[39m \u001b[32m`${type.toUpperCase()}_${Date.now()}`\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 489 |\u001b[39m         message\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 490 |\u001b[39m         userMessage\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 491 |\u001b[39m         severity\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toUpperCase (\u001b[22m\u001b[2msrc/lib/errors.ts\u001b[2m:488:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat MultiIntentProcessor.processMultiIntent (\u001b[22m\u001b[2msrc/lib/multi-intent-processor.ts\u001b[2m:213:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:157:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Compound Intent Processing › should analyze intent relationships\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 204 |\u001b[39m             )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 205 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 206 |\u001b[39m             expect(result\u001b[33m.\u001b[39mcompoundIntent\u001b[33m.\u001b[39mrelationships\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 207 |\u001b[39m             expect(result\u001b[33m.\u001b[39mcompoundIntent\u001b[33m.\u001b[39mrelationships[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mtype)\u001b[33m.\u001b[39mtoBe(\u001b[33mRelationshipType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSEQUENTIAL\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 208 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 209 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:206:64)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Compound Intent Processing › should create proper execution order\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 234 |\u001b[39m             )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 235 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 236 |\u001b[39m             expect(createStep)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 237 |\u001b[39m             expect(editStep)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 238 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 239 |\u001b[39m             \u001b[36mconst\u001b[39m createIndex \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mcompoundIntent\u001b[33m.\u001b[39mexecutionOrder\u001b[33m.\u001b[39mindexOf(createStep\u001b[33m!\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeDefined (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:236:32)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Conflict Analysis › should detect conflicting intents\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 266 |\u001b[39m                 w\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[33mWarningType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mCONFLICTING_INTENTS\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 267 |\u001b[39m             )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 268 |\u001b[39m             expect(conflictWarnings\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 269 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 270 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 271 |\u001b[39m         it(\u001b[32m'should require confirmation for risky operations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:268:45)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Conflict Analysis › should require confirmation for risky operations\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 286 |\u001b[39m             )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 287 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 288 |\u001b[39m             expect(result\u001b[33m.\u001b[39mrequiresUserConfirmation)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 289 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 290 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 291 |\u001b[39m         it(\u001b[32m'should prevent immediate execution for complex operations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:288:53)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Execution Suggestions › should suggest operation reordering for efficiency\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 338 |\u001b[39m                     s\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[33mSuggestionType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mREORDER_OPERATIONS\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 339 |\u001b[39m                 )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 340 |\u001b[39m                 expect(reorderSuggestions\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 341 |\u001b[39m             }\u001b[22m\n\u001b[2m     \u001b[90m 342 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 343 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:340:51)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Execution Suggestions › should suggest merging similar operations\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 363 |\u001b[39m                 s\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[33mSuggestionType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mMERGE_OPERATIONS\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 364 |\u001b[39m             )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 365 |\u001b[39m             expect(mergeSuggestions\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 366 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 367 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 368 |\u001b[39m         it(\u001b[32m'should suggest confirmation for error conditions'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:365:45)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Execution Planning › should assign appropriate priorities to execution steps\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m3\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 419 |\u001b[39m             )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 420 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 421 |\u001b[39m             expect(deleteStep\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mpriority)\u001b[33m.\u001b[39mtoBe(\u001b[33mExecutionPriority\u001b[39m\u001b[33m.\u001b[39m\u001b[33mHIGH\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 422 |\u001b[39m             expect(createStep\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mpriority)\u001b[33m.\u001b[39mtoBe(\u001b[33mExecutionPriority\u001b[39m\u001b[33m.\u001b[39m\u001b[33mNORMAL\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 423 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 424 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:421:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Execution Planning › should estimate execution times for steps\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m45000\u001b[39m\n    Received:   \u001b[31m30000\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 445 |\u001b[39m             \u001b[36mconst\u001b[39m step \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mcompoundIntent\u001b[33m.\u001b[39mexecutionOrder[\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 446 |\u001b[39m             expect(step\u001b[33m.\u001b[39mestimatedDuration)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 447 |\u001b[39m             expect(step\u001b[33m.\u001b[39mestimatedDuration)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m45000\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Base time + entity time\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 448 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 449 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 450 |\u001b[39m         it(\u001b[32m'should identify parallelizable operations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:447:44)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMultiIntentProcessor › Error Handling › should handle processing errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31m{\"canExecuteImmediately\": true, \"compoundIntent\": {\"complexity\": \"simple\", \"confidence\": 0.3, \"executionOrder\": [{\"canParallelize\": false, \"entities\": [], \"estimatedDuration\": 30000, \"id\": \"step_fallback_unclear_1758279150052\", \"intent\": {\"category\": \"unclear\", \"confidence\": 0.3, \"entities\": [], \"name\": \"fallback_unclear\", \"parameters\": {}}, \"prerequisites\": [], \"priority\": 2}], \"id\": \"single_1758279150052\", \"primaryIntent\": {\"category\": \"unclear\", \"confidence\": 0.3, \"entities\": [], \"name\": \"fallback_unclear\", \"parameters\": {}}, \"relationships\": [], \"secondaryIntents\": []}, \"confidence\": 0.3, \"processingTime\": 0, \"requiresUserConfirmation\": false, \"suggestions\": [], \"warnings\": []}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 480 |\u001b[39m             enhancedNLPProcessor\u001b[33m.\u001b[39mextractIntent\u001b[33m.\u001b[39mmockRejectedValueOnce(\u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'NLP failed'\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 481 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 482 |\u001b[39m             \u001b[36mawait\u001b[39m expect(processor\u001b[33m.\u001b[39mprocessMultiIntent(\u001b[32m'test input'\u001b[39m\u001b[33m,\u001b[39m mockContext))\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 483 |\u001b[39m                 \u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 484 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 485 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2mnode_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js\u001b[2m:2116:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.expect (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:482:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConvenience Functions › should process multiple intents using convenience function\u001b[39m\u001b[22m\n\n    TypeError: (0 , _multiIntentProcessor.processMultipleIntents) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 538 |\u001b[39m         enhancedNLPProcessor\u001b[33m.\u001b[39mextractEntities\u001b[33m.\u001b[39mmockResolvedValue([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 539 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 540 |\u001b[39m         \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m processMultipleIntents(\u001b[32m'test input'\u001b[39m\u001b[33m,\u001b[39m mockContext)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 541 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 542 |\u001b[39m         expect(result\u001b[33m.\u001b[39mcompoundIntent)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 543 |\u001b[39m         expect(result\u001b[33m.\u001b[39mprocessingTime)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:540:52)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConvenience Functions › should detect multiple intents using convenience function\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected length: \u001b[32m2\u001b[39m\n    Received length: \u001b[31m1\u001b[39m\n    Received array:  \u001b[31m[{\"category\": \"unclear\", \"confidence\": 0.8, \"entities\": [], \"name\": \"schedule_create\", \"parameters\": {}}]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 556 |\u001b[39m         \u001b[36mconst\u001b[39m intents \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m detectMultipleIntents(\u001b[32m'test input'\u001b[39m\u001b[33m,\u001b[39m mockContext)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 557 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 558 |\u001b[39m         expect(intents)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 559 |\u001b[39m         expect(intents[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mcategory)\u001b[33m.\u001b[39mtoBe(\u001b[33mIntentCategory\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSCHEDULE_CREATE\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 560 |\u001b[39m         expect(intents[\u001b[35m1\u001b[39m]\u001b[33m.\u001b[39mcategory)\u001b[33m.\u001b[39mtoBe(\u001b[33mIntentCategory\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSCHEDULE_EDIT\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 561 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveLength (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/multi-intent-processor.test.ts\u001b[39m\u001b[0m\u001b[2m:558:25)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-intent-processor.test.ts","startTime":1758279149454,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["PreferencesStorageManager","Get User Preferences"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Get User Preferences should return default preferences for new user","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150215,"status":"passed","title":"should return default preferences for new user"},{"ancestorTitles":["PreferencesStorageManager","Get User Preferences"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Get User Preferences should return stored preferences for existing user","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150216,"status":"passed","title":"should return stored preferences for existing user"},{"ancestorTitles":["PreferencesStorageManager","Get User Preferences"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":"natural_language","expected":"quick_reply","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"quick_reply\"\u001b[39m\nReceived: \u001b[31m\"natural_language\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"quick_reply\"\u001b[39m\nReceived: \u001b[31m\"natural_language\"\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-storage.test.ts:83:62)"],"fullName":"PreferencesStorageManager Get User Preferences should merge stored preferences with defaults","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150217,"status":"failed","title":"should merge stored preferences with defaults"},{"ancestorTitles":["PreferencesStorageManager","Get User Preferences"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[33m@@ -177,14 +177,14 @@\u001b[39m\n\u001b[2m    \"ui\": Object {\u001b[22m\n\u001b[2m      \"dateFormat\": \"MM/DD\",\u001b[22m\n\u001b[2m      \"enableAutoRetry\": true,\u001b[22m\n\u001b[2m      \"enableQuickReplyShortcuts\": false,\u001b[22m\n\u001b[2m      \"enableSmartSuggestions\": true,\u001b[22m\n\u001b[32m-     \"language\": \"ja\",\u001b[39m\n\u001b[31m+     \"language\": \"en\",\u001b[39m\n\u001b[2m      \"maxQuickReplyItems\": 8,\u001b[22m\n\u001b[2m      \"maxRetryAttempts\": 3,\u001b[22m\n\u001b[32m-     \"preferredInteractionStyle\": \"mixed\",\u001b[39m\n\u001b[31m+     \"preferredInteractionStyle\": \"natural_language\",\u001b[39m\n\u001b[2m      \"showDetailedConfirmations\": true,\u001b[22m\n\u001b[2m      \"showIconsInQuickReply\": true,\u001b[22m\n\u001b[2m      \"showProgressIndicators\": true,\u001b[22m\n\u001b[2m      \"showTechnicalDetails\": false,\u001b[22m\n\u001b[2m      \"timeFormat\": \"24h\",\u001b[22m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[33m@@ -177,14 +177,14 @@\u001b[39m\n\u001b[2m    \"ui\": Object {\u001b[22m\n\u001b[2m      \"dateFormat\": \"MM/DD\",\u001b[22m\n\u001b[2m      \"enableAutoRetry\": true,\u001b[22m\n\u001b[2m      \"enableQuickReplyShortcuts\": false,\u001b[22m\n\u001b[2m      \"enableSmartSuggestions\": true,\u001b[22m\n\u001b[32m-     \"language\": \"ja\",\u001b[39m\n\u001b[31m+     \"language\": \"en\",\u001b[39m\n\u001b[2m      \"maxQuickReplyItems\": 8,\u001b[22m\n\u001b[2m      \"maxRetryAttempts\": 3,\u001b[22m\n\u001b[32m-     \"preferredInteractionStyle\": \"mixed\",\u001b[39m\n\u001b[31m+     \"preferredInteractionStyle\": \"natural_language\",\u001b[39m\n\u001b[2m      \"showDetailedConfirmations\": true,\u001b[22m\n\u001b[2m      \"showIconsInQuickReply\": true,\u001b[22m\n\u001b[2m      \"showProgressIndicators\": true,\u001b[22m\n\u001b[2m      \"showTechnicalDetails\": false,\u001b[22m\n\u001b[2m      \"timeFormat\": \"24h\",\u001b[22m\n    at Object.toMatchObject (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-storage.test.ts:96:33)"],"fullName":"PreferencesStorageManager Get User Preferences should handle storage errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150222,"status":"failed","title":"should handle storage errors gracefully"},{"ancestorTitles":["PreferencesStorageManager","Save User Preferences"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Save User Preferences should save valid preferences successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279150226,"status":"passed","title":"should save valid preferences successfully"},{"ancestorTitles":["PreferencesStorageManager","Save User Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Save User Preferences should validate preferences before saving","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150227,"status":"passed","title":"should validate preferences before saving"},{"ancestorTitles":["PreferencesStorageManager","Save User Preferences"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m3\u001b[39m\nReceived number of calls: \u001b[31m2\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m3\u001b[39m\nReceived number of calls: \u001b[31m2\u001b[39m\n    at Object.toHaveBeenCalledTimes (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-storage.test.ts:135:42)"],"fullName":"PreferencesStorageManager Save User Preferences should create backup before saving","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150227,"status":"failed","title":"should create backup before saving"},{"ancestorTitles":["PreferencesStorageManager","Save User Preferences"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-storage.test.ts:144:36)"],"fullName":"PreferencesStorageManager Save User Preferences should handle save errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150228,"status":"failed","title":"should handle save errors gracefully"},{"ancestorTitles":["PreferencesStorageManager","Update User Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Update User Preferences should update specific preference fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150230,"status":"passed","title":"should update specific preference fields"},{"ancestorTitles":["PreferencesStorageManager","Update User Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Update User Preferences should preserve existing preferences when updating","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150230,"status":"passed","title":"should preserve existing preferences when updating"},{"ancestorTitles":["PreferencesStorageManager","Reset User Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Reset User Preferences should reset preferences to defaults","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150231,"status":"passed","title":"should reset preferences to defaults"},{"ancestorTitles":["PreferencesStorageManager","Reset User Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Reset User Preferences should preserve specified fields when resetting","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150231,"status":"passed","title":"should preserve specified fields when resetting"},{"ancestorTitles":["PreferencesStorageManager","Reset User Preferences"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m3\u001b[39m\nReceived number of calls: \u001b[31m5\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m3\u001b[39m\nReceived number of calls: \u001b[31m5\u001b[39m\n    at Object.toHaveBeenCalledTimes (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-storage.test.ts:216:42)"],"fullName":"PreferencesStorageManager Reset User Preferences should create backup before reset","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150231,"status":"failed","title":"should create backup before reset"},{"ancestorTitles":["PreferencesStorageManager","Export User Preferences"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"actual":{"version":"1.0.0","ui":{"preferredInteractionStyle":"mixed","showDetailedConfirmations":true,"enableSmartSuggestions":true,"showProgressIndicators":true,"dateFormat":"MM/DD","timeFormat":"24h","timezone":"Asia/Tokyo","language":"ja","maxQuickReplyItems":8,"showIconsInQuickReply":true,"enableQuickReplyShortcuts":false,"showTechnicalDetails":false,"enableAutoRetry":true,"maxRetryAttempts":3},"notifications":{"enabled":true,"quietHours":[{"id":"night","name":"夜間","startTime":"22:00","endTime":"07:00","daysOfWeek":[0,1,2,3,4,5,6],"enabled":true,"allowUrgent":true}],"defaultReminderMinutes":30,"enableMultipleReminders":false,"reminderTimings":[30],"eventTypeSettings":[],"includeWeatherInfo":true,"includeTrafficInfo":true,"includeLocationDetails":true,"maxNotificationsPerHour":10,"enableBatchNotifications":false,"snoozeOptions":[5,10,15,30],"priorityRules":[]},"aiLearning":{"enableLearning":true,"enableLocationLearning":true,"enableTimePatternLearning":true,"enableEventTypeLearning":true,"dataRetentionDays":90,"maxLearningEntries":1000,"learningThreshold":3,"suggestionConfidenceThreshold":0.7,"allowDataSharing":false,"anonymizeData":true,"enableFeedbackCollection":true,"enableImplicitFeedback":true},"defaults":{"defaultEventDuration":60,"defaultReminderTime":30,"frequentLocations":[],"commonEventTypes":["会議","ミーティング","打合せ","面談","研修"],"preferredMeetingTimes":[{"startTime":"09:00","endTime":"12:00","daysOfWeek":[1,2,3,4,5]},{"startTime":"14:00","endTime":"17:00","daysOfWeek":[1,2,3,4,5]}],"workingHours":{"enabled":true,"schedule":[{"dayOfWeek":1,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":2,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":3,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":4,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":5,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":6,"enabled":false,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":0,"enabled":false,"startTime":"09:00","endTime":"18:00"}],"timezone":"Asia/Tokyo","includeBreaks":true,"breaks":[{"startTime":"12:00","endTime":"13:00","daysOfWeek":[1,2,3,4,5]}]},"defaultCalendarId":"primary","enableConflictDetection":true,"bufferTimeBetweenEvents":15},"enabledFeatures":["smart_suggestions","ai_scheduling","conflict_detection","weather_integration","traffic_integration"],"betaFeatures":[],"accessibility":{"highContrast":false,"largeText":false,"reduceMotion":false,"enableVoiceCommands":false,"enableKeyboardShortcuts":false,"slowAnimations":false,"verboseDescriptions":false,"simplifiedInterface":false,"enableScreenReader":false},"userId":"user123","createdAt":1758279150232,"updatedAt":1758279150232},"expected":{"version":"1.0.0","ui":{"preferredInteractionStyle":"natural_language","showDetailedConfirmations":true,"enableSmartSuggestions":true,"showProgressIndicators":true,"dateFormat":"MM/DD","timeFormat":"24h","timezone":"Asia/Tokyo","language":"en","maxQuickReplyItems":8,"showIconsInQuickReply":true,"enableQuickReplyShortcuts":false,"showTechnicalDetails":false,"enableAutoRetry":true,"maxRetryAttempts":3},"notifications":{"enabled":true,"quietHours":[{"id":"night","name":"夜間","startTime":"22:00","endTime":"07:00","daysOfWeek":[0,1,2,3,4,5,6],"enabled":true,"allowUrgent":true}],"defaultReminderMinutes":30,"enableMultipleReminders":false,"reminderTimings":[30],"eventTypeSettings":[],"includeWeatherInfo":true,"includeTrafficInfo":true,"includeLocationDetails":true,"maxNotificationsPerHour":10,"enableBatchNotifications":false,"snoozeOptions":[5,10,15,30],"priorityRules":[]},"aiLearning":{"enableLearning":true,"enableLocationLearning":true,"enableTimePatternLearning":true,"enableEventTypeLearning":true,"dataRetentionDays":90,"maxLearningEntries":1000,"learningThreshold":3,"suggestionConfidenceThreshold":0.7,"allowDataSharing":false,"anonymizeData":true,"enableFeedbackCollection":true,"enableImplicitFeedback":true},"defaults":{"defaultEventDuration":60,"defaultReminderTime":30,"frequentLocations":[],"commonEventTypes":["会議","ミーティング","打合せ","面談","研修"],"preferredMeetingTimes":[{"startTime":"09:00","endTime":"12:00","daysOfWeek":[1,2,3,4,5]},{"startTime":"14:00","endTime":"17:00","daysOfWeek":[1,2,3,4,5]}],"workingHours":{"enabled":true,"schedule":[{"dayOfWeek":1,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":2,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":3,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":4,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":5,"enabled":true,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":6,"enabled":false,"startTime":"09:00","endTime":"18:00"},{"dayOfWeek":0,"enabled":false,"startTime":"09:00","endTime":"18:00"}],"timezone":"Asia/Tokyo","includeBreaks":true,"breaks":[{"startTime":"12:00","endTime":"13:00","daysOfWeek":[1,2,3,4,5]}]},"defaultCalendarId":"primary","enableConflictDetection":true,"bufferTimeBetweenEvents":15},"enabledFeatures":["smart_suggestions","ai_scheduling","conflict_detection","weather_integration","traffic_integration"],"betaFeatures":[],"accessibility":{"highContrast":false,"largeText":false,"reduceMotion":false,"enableVoiceCommands":false,"enableKeyboardShortcuts":false,"slowAnimations":false,"verboseDescriptions":false,"simplifiedInterface":false,"enableScreenReader":false},"userId":"user123","createdAt":1758192750232,"updatedAt":1758275550232},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 4\u001b[39m\n\u001b[31m+ Received  + 4\u001b[39m\n\n\u001b[33m@@ -23,11 +23,11 @@\u001b[39m\n\u001b[2m      \"learningThreshold\": 3,\u001b[22m\n\u001b[2m      \"maxLearningEntries\": 1000,\u001b[22m\n\u001b[2m      \"suggestionConfidenceThreshold\": 0.7,\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m    \"betaFeatures\": Array [],\u001b[22m\n\u001b[32m-   \"createdAt\": 1758192750232,\u001b[39m\n\u001b[31m+   \"createdAt\": 1758279150232,\u001b[39m\n\u001b[2m    \"defaults\": Object {\u001b[22m\n\u001b[2m      \"bufferTimeBetweenEvents\": 15,\u001b[22m\n\u001b[2m      \"commonEventTypes\": Array [\u001b[22m\n\u001b[2m        \"会議\",\u001b[22m\n\u001b[2m        \"ミーティング\",\u001b[22m\n\u001b[33m@@ -178,20 +178,20 @@\u001b[39m\n\u001b[2m    \"ui\": Object {\u001b[22m\n\u001b[2m      \"dateFormat\": \"MM/DD\",\u001b[22m\n\u001b[2m      \"enableAutoRetry\": true,\u001b[22m\n\u001b[2m      \"enableQuickReplyShortcuts\": false,\u001b[22m\n\u001b[2m      \"enableSmartSuggestions\": true,\u001b[22m\n\u001b[32m-     \"language\": \"en\",\u001b[39m\n\u001b[31m+     \"language\": \"ja\",\u001b[39m\n\u001b[2m      \"maxQuickReplyItems\": 8,\u001b[22m\n\u001b[2m      \"maxRetryAttempts\": 3,\u001b[22m\n\u001b[32m-     \"preferredInteractionStyle\": \"natural_language\",\u001b[39m\n\u001b[31m+     \"preferredInteractionStyle\": \"mixed\",\u001b[39m\n\u001b[2m      \"showDetailedConfirmations\": true,\u001b[22m\n\u001b[2m      \"showIconsInQuickReply\": true,\u001b[22m\n\u001b[2m      \"showProgressIndicators\": true,\u001b[22m\n\u001b[2m      \"showTechnicalDetails\": false,\u001b[22m\n\u001b[2m      \"timeFormat\": \"24h\",\u001b[22m\n\u001b[2m      \"timezone\": \"Asia/Tokyo\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[32m-   \"updatedAt\": 1758275550232,\u001b[39m\n\u001b[31m+   \"updatedAt\": 1758279150232,\u001b[39m\n\u001b[2m    \"userId\": \"user123\",\u001b[22m\n\u001b[2m    \"version\": \"1.0.0\",\u001b[22m\n\u001b[2m  }\u001b[22m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 4\u001b[39m\n\u001b[31m+ Received  + 4\u001b[39m\n\n\u001b[33m@@ -23,11 +23,11 @@\u001b[39m\n\u001b[2m      \"learningThreshold\": 3,\u001b[22m\n\u001b[2m      \"maxLearningEntries\": 1000,\u001b[22m\n\u001b[2m      \"suggestionConfidenceThreshold\": 0.7,\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m    \"betaFeatures\": Array [],\u001b[22m\n\u001b[32m-   \"createdAt\": 1758192750232,\u001b[39m\n\u001b[31m+   \"createdAt\": 1758279150232,\u001b[39m\n\u001b[2m    \"defaults\": Object {\u001b[22m\n\u001b[2m      \"bufferTimeBetweenEvents\": 15,\u001b[22m\n\u001b[2m      \"commonEventTypes\": Array [\u001b[22m\n\u001b[2m        \"会議\",\u001b[22m\n\u001b[2m        \"ミーティング\",\u001b[22m\n\u001b[33m@@ -178,20 +178,20 @@\u001b[39m\n\u001b[2m    \"ui\": Object {\u001b[22m\n\u001b[2m      \"dateFormat\": \"MM/DD\",\u001b[22m\n\u001b[2m      \"enableAutoRetry\": true,\u001b[22m\n\u001b[2m      \"enableQuickReplyShortcuts\": false,\u001b[22m\n\u001b[2m      \"enableSmartSuggestions\": true,\u001b[22m\n\u001b[32m-     \"language\": \"en\",\u001b[39m\n\u001b[31m+     \"language\": \"ja\",\u001b[39m\n\u001b[2m      \"maxQuickReplyItems\": 8,\u001b[22m\n\u001b[2m      \"maxRetryAttempts\": 3,\u001b[22m\n\u001b[32m-     \"preferredInteractionStyle\": \"natural_language\",\u001b[39m\n\u001b[31m+     \"preferredInteractionStyle\": \"mixed\",\u001b[39m\n\u001b[2m      \"showDetailedConfirmations\": true,\u001b[22m\n\u001b[2m      \"showIconsInQuickReply\": true,\u001b[22m\n\u001b[2m      \"showProgressIndicators\": true,\u001b[22m\n\u001b[2m      \"showTechnicalDetails\": false,\u001b[22m\n\u001b[2m      \"timeFormat\": \"24h\",\u001b[22m\n\u001b[2m      \"timezone\": \"Asia/Tokyo\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[32m-   \"updatedAt\": 1758275550232,\u001b[39m\n\u001b[31m+   \"updatedAt\": 1758279150232,\u001b[39m\n\u001b[2m    \"userId\": \"user123\",\u001b[22m\n\u001b[2m    \"version\": \"1.0.0\",\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Object.toEqual (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-storage.test.ts:228:44)"],"fullName":"PreferencesStorageManager Export User Preferences should export full preferences","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150232,"status":"failed","title":"should export full preferences"},{"ancestorTitles":["PreferencesStorageManager","Export User Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Export User Preferences should export minimal preferences","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150235,"status":"passed","title":"should export minimal preferences"},{"ancestorTitles":["PreferencesStorageManager","Import User Preferences"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Import User Preferences should import preferences successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150235,"status":"passed","title":"should import preferences successfully"},{"ancestorTitles":["PreferencesStorageManager","Import User Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Import User Preferences should validate import data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150236,"status":"passed","title":"should validate import data"},{"ancestorTitles":["PreferencesStorageManager","Import User Preferences"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m3\u001b[39m\nReceived number of calls: \u001b[31m5\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m3\u001b[39m\nReceived number of calls: \u001b[31m5\u001b[39m\n    at Object.toHaveBeenCalledTimes (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-storage.test.ts:311:42)"],"fullName":"PreferencesStorageManager Import User Preferences should create backup before import","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150236,"status":"failed","title":"should create backup before import"},{"ancestorTitles":["PreferencesStorageManager","Preference Backups"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Preference Backups should create preference backup","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150236,"status":"passed","title":"should create preference backup"},{"ancestorTitles":["PreferencesStorageManager","Preference Backups"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Preference Backups should list preference backups","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150236,"status":"passed","title":"should list preference backups"},{"ancestorTitles":["PreferencesStorageManager","Preference Backups"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Preference Backups should restore from backup","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150237,"status":"passed","title":"should restore from backup"},{"ancestorTitles":["PreferencesStorageManager","Preference Backups"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Preference Backups should handle missing backup gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150237,"status":"passed","title":"should handle missing backup gracefully"},{"ancestorTitles":["PreferencesStorageManager","Delete User Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesStorageManager Delete User Preferences should delete all user preference data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150237,"status":"passed","title":"should delete all user preference data"},{"ancestorTitles":["Convenience Functions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should get user preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150237,"status":"passed","title":"should get user preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should save user preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150238,"status":"passed","title":"should save user preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should update user preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150238,"status":"passed","title":"should update user preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should reset user preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150238,"status":"passed","title":"should reset user preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should export user preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150238,"status":"passed","title":"should export user preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should import user preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150239,"status":"passed","title":"should import user preferences using convenience function"}],"endTime":1758279150253,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesStorageManager › Get User Preferences › should merge stored preferences with defaults\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"quick_reply\"\u001b[39m\n    Received: \u001b[31m\"natural_language\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 81 |\u001b[39m             \u001b[36mconst\u001b[39m preferences \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m manager\u001b[33m.\u001b[39mgetUserPreferences(\u001b[32m'user123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 83 |\u001b[39m             expect(preferences\u001b[33m.\u001b[39mui\u001b[33m.\u001b[39mpreferredInteractionStyle)\u001b[33m.\u001b[39mtoBe(\u001b[32m'quick_reply'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m             expect(preferences\u001b[33m.\u001b[39mui\u001b[33m.\u001b[39mlanguage)\u001b[33m.\u001b[39mtoBe(\u001b[32m'ja'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 85 |\u001b[39m             expect(preferences\u001b[33m.\u001b[39mnotifications\u001b[33m.\u001b[39menabled)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// From defaults\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 86 |\u001b[39m             expect(preferences\u001b[33m.\u001b[39maiLearning\u001b[33m.\u001b[39menableLearning)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// From defaults\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-storage.test.ts\u001b[39m\u001b[0m\u001b[2m:83:62)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesStorageManager › Get User Preferences › should handle storage errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[33m@@ -177,14 +177,14 @@\u001b[39m\n    \u001b[2m    \"ui\": Object {\u001b[22m\n    \u001b[2m      \"dateFormat\": \"MM/DD\",\u001b[22m\n    \u001b[2m      \"enableAutoRetry\": true,\u001b[22m\n    \u001b[2m      \"enableQuickReplyShortcuts\": false,\u001b[22m\n    \u001b[2m      \"enableSmartSuggestions\": true,\u001b[22m\n    \u001b[32m-     \"language\": \"ja\",\u001b[39m\n    \u001b[31m+     \"language\": \"en\",\u001b[39m\n    \u001b[2m      \"maxQuickReplyItems\": 8,\u001b[22m\n    \u001b[2m      \"maxRetryAttempts\": 3,\u001b[22m\n    \u001b[32m-     \"preferredInteractionStyle\": \"mixed\",\u001b[39m\n    \u001b[31m+     \"preferredInteractionStyle\": \"natural_language\",\u001b[39m\n    \u001b[2m      \"showDetailedConfirmations\": true,\u001b[22m\n    \u001b[2m      \"showIconsInQuickReply\": true,\u001b[22m\n    \u001b[2m      \"showProgressIndicators\": true,\u001b[22m\n    \u001b[2m      \"showTechnicalDetails\": false,\u001b[22m\n    \u001b[2m      \"timeFormat\": \"24h\",\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 95 |\u001b[39m             expect(preferences\u001b[33m.\u001b[39muserId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'user123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 96 |\u001b[39m             expect(preferences)\u001b[33m.\u001b[39mtoMatchObject(\u001b[33mDEFAULT_USER_PREFERENCES\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 97 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 98 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 99 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toMatchObject (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-storage.test.ts\u001b[39m\u001b[0m\u001b[2m:96:33)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesStorageManager › Save User Preferences › should create backup before saving\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m3\u001b[39m\n    Received number of calls: \u001b[31m2\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 133 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m             \u001b[90m// Should call stashPostbackPayload multiple times (backup + preferences + backup index)\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 135 |\u001b[39m             expect(stashPostbackPayload)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 136 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 137 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 138 |\u001b[39m         it(\u001b[32m'should handle save errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledTimes (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-storage.test.ts\u001b[39m\u001b[0m\u001b[2m:135:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesStorageManager › Save User Preferences › should handle save errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m manager\u001b[33m.\u001b[39msaveUserPreferences(\u001b[32m'user123'\u001b[39m\u001b[33m,\u001b[39m mockPreferences)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 143 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 144 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m             expect(result\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Failed to save preferences'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 146 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 147 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-storage.test.ts\u001b[39m\u001b[0m\u001b[2m:144:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesStorageManager › Reset User Preferences › should create backup before reset\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m3\u001b[39m\n    Received number of calls: \u001b[31m5\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 214 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 215 |\u001b[39m             \u001b[90m// Should create backup before reset\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 216 |\u001b[39m             expect(stashPostbackPayload)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// backup + preferences + backup index\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 217 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 218 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 219 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledTimes (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-storage.test.ts\u001b[39m\u001b[0m\u001b[2m:216:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesStorageManager › Export User Preferences › should export full preferences\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 4\u001b[39m\n    \u001b[31m+ Received  + 4\u001b[39m\n\n    \u001b[33m@@ -23,11 +23,11 @@\u001b[39m\n    \u001b[2m      \"learningThreshold\": 3,\u001b[22m\n    \u001b[2m      \"maxLearningEntries\": 1000,\u001b[22m\n    \u001b[2m      \"suggestionConfidenceThreshold\": 0.7,\u001b[22m\n    \u001b[2m    },\u001b[22m\n    \u001b[2m    \"betaFeatures\": Array [],\u001b[22m\n    \u001b[32m-   \"createdAt\": 1758192750232,\u001b[39m\n    \u001b[31m+   \"createdAt\": 1758279150232,\u001b[39m\n    \u001b[2m    \"defaults\": Object {\u001b[22m\n    \u001b[2m      \"bufferTimeBetweenEvents\": 15,\u001b[22m\n    \u001b[2m      \"commonEventTypes\": Array [\u001b[22m\n    \u001b[2m        \"会議\",\u001b[22m\n    \u001b[2m        \"ミーティング\",\u001b[22m\n    \u001b[33m@@ -178,20 +178,20 @@\u001b[39m\n    \u001b[2m    \"ui\": Object {\u001b[22m\n    \u001b[2m      \"dateFormat\": \"MM/DD\",\u001b[22m\n    \u001b[2m      \"enableAutoRetry\": true,\u001b[22m\n    \u001b[2m      \"enableQuickReplyShortcuts\": false,\u001b[22m\n    \u001b[2m      \"enableSmartSuggestions\": true,\u001b[22m\n    \u001b[32m-     \"language\": \"en\",\u001b[39m\n    \u001b[31m+     \"language\": \"ja\",\u001b[39m\n    \u001b[2m      \"maxQuickReplyItems\": 8,\u001b[22m\n    \u001b[2m      \"maxRetryAttempts\": 3,\u001b[22m\n    \u001b[32m-     \"preferredInteractionStyle\": \"natural_language\",\u001b[39m\n    \u001b[31m+     \"preferredInteractionStyle\": \"mixed\",\u001b[39m\n    \u001b[2m      \"showDetailedConfirmations\": true,\u001b[22m\n    \u001b[2m      \"showIconsInQuickReply\": true,\u001b[22m\n    \u001b[2m      \"showProgressIndicators\": true,\u001b[22m\n    \u001b[2m      \"showTechnicalDetails\": false,\u001b[22m\n    \u001b[2m      \"timeFormat\": \"24h\",\u001b[22m\n    \u001b[2m      \"timezone\": \"Asia/Tokyo\",\u001b[22m\n    \u001b[2m    },\u001b[22m\n    \u001b[32m-   \"updatedAt\": 1758275550232,\u001b[39m\n    \u001b[31m+   \"updatedAt\": 1758279150232,\u001b[39m\n    \u001b[2m    \"userId\": \"user123\",\u001b[22m\n    \u001b[2m    \"version\": \"1.0.0\",\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 226 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 227 |\u001b[39m             expect(exportData\u001b[33m.\u001b[39muserId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'user123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 228 |\u001b[39m             expect(exportData\u001b[33m.\u001b[39mpreferences)\u001b[33m.\u001b[39mtoEqual(mockPreferences)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m             expect(exportData\u001b[33m.\u001b[39mmetadata\u001b[33m.\u001b[39mformat)\u001b[33m.\u001b[39mtoBe(\u001b[32m'full'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m             expect(exportData\u001b[33m.\u001b[39mmetadata\u001b[33m.\u001b[39mincludePersonalData)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 231 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-storage.test.ts\u001b[39m\u001b[0m\u001b[2m:228:44)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesStorageManager › Import User Preferences › should create backup before import\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m3\u001b[39m\n    Received number of calls: \u001b[31m5\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 309 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 310 |\u001b[39m             \u001b[90m// Should create backup before import\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 311 |\u001b[39m             expect(stashPostbackPayload)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// backup + preferences + backup index\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 312 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 313 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 314 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledTimes (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-storage.test.ts\u001b[39m\u001b[0m\u001b[2m:311:42)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-storage.test.ts","startTime":1758279150114,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["PreferencesAPI","Get Preferences"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Get Preferences should get full preferences by default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150333,"status":"passed","title":"should get full preferences by default"},{"ancestorTitles":["PreferencesAPI","Get Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Get Preferences should get specific fields when requested","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150334,"status":"passed","title":"should get specific fields when requested"},{"ancestorTitles":["PreferencesAPI","Get Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Get Preferences should get minimal preferences when requested","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150334,"status":"passed","title":"should get minimal preferences when requested"},{"ancestorTitles":["PreferencesAPI","Get Preferences"],"duration":7,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived function did not throw","pass":false},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived function did not throw"}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived function did not throw\n    at Object.toThrow (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js:2155:20)\n    at Object.toThrow (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-api.test.ts:97:65)\n    at Promise.finally.completed (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)\n    at _callCircusTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)\n    at _runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)\n    at jestAdapter (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"PreferencesAPI Get Preferences should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150334,"status":"failed","title":"should handle errors gracefully"},{"ancestorTitles":["PreferencesAPI","Update Preference Field"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-api.test.ts:105:36)"],"fullName":"PreferencesAPI Update Preference Field should update a single preference field","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150342,"status":"failed","title":"should update a single preference field"},{"ancestorTitles":["PreferencesAPI","Update Preference Field"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Update Preference Field should validate field value when requested","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150342,"status":"passed","title":"should validate field value when requested"},{"ancestorTitles":["PreferencesAPI","Update Preference Field"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-api.test.ts:132:36)"],"fullName":"PreferencesAPI Update Preference Field should handle nested field updates","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150342,"status":"failed","title":"should handle nested field updates"},{"ancestorTitles":["PreferencesAPI","Bulk Update Preferences"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-api.test.ts:154:36)"],"fullName":"PreferencesAPI Bulk Update Preferences should update multiple fields at once","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150343,"status":"failed","title":"should update multiple fields at once"},{"ancestorTitles":["PreferencesAPI","Bulk Update Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Bulk Update Preferences should validate all updates when requested","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150343,"status":"passed","title":"should validate all updates when requested"},{"ancestorTitles":["PreferencesAPI","Bulk Update Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Bulk Update Preferences should create backup when requested","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150343,"status":"passed","title":"should create backup when requested"},{"ancestorTitles":["PreferencesAPI","UI Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI UI Preferences should get UI preferences","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150343,"status":"passed","title":"should get UI preferences"},{"ancestorTitles":["PreferencesAPI","UI Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI UI Preferences should update UI preferences","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150344,"status":"passed","title":"should update UI preferences"},{"ancestorTitles":["PreferencesAPI","Notification Preferences"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Notification Preferences should get notification preferences","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150344,"status":"passed","title":"should get notification preferences"},{"ancestorTitles":["PreferencesAPI","Notification Preferences"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Notification Preferences should update notification preferences","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150345,"status":"passed","title":"should update notification preferences"},{"ancestorTitles":["PreferencesAPI","Notification Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Notification Preferences should update quiet hours","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150346,"status":"passed","title":"should update quiet hours"},{"ancestorTitles":["PreferencesAPI","Notification Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Notification Preferences should remove quiet hours","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150346,"status":"passed","title":"should remove quiet hours"},{"ancestorTitles":["PreferencesAPI","Notification Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Notification Preferences should update event type settings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150346,"status":"passed","title":"should update event type settings"},{"ancestorTitles":["PreferencesAPI","AI Learning Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI AI Learning Preferences should get AI learning preferences","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150346,"status":"passed","title":"should get AI learning preferences"},{"ancestorTitles":["PreferencesAPI","AI Learning Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI AI Learning Preferences should update AI learning preferences","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150347,"status":"passed","title":"should update AI learning preferences"},{"ancestorTitles":["PreferencesAPI","Default Values"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Default Values should get default values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150347,"status":"passed","title":"should get default values"},{"ancestorTitles":["PreferencesAPI","Default Values"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Default Values should update default values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150347,"status":"passed","title":"should update default values"},{"ancestorTitles":["PreferencesAPI","Default Values"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Default Values should update frequent location","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150347,"status":"passed","title":"should update frequent location"},{"ancestorTitles":["PreferencesAPI","Default Values"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Default Values should remove frequent location","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150347,"status":"passed","title":"should remove frequent location"},{"ancestorTitles":["PreferencesAPI","Search Preferences"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Search Preferences should search preferences by field name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150347,"status":"passed","title":"should search preferences by field name"},{"ancestorTitles":["PreferencesAPI","Search Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Search Preferences should search preferences by value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150355,"status":"passed","title":"should search preferences by value"},{"ancestorTitles":["PreferencesAPI","Search Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Search Preferences should return empty array on search error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150355,"status":"passed","title":"should return empty array on search error"},{"ancestorTitles":["PreferencesAPI","Field Validation"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-api.test.ts:370:34)\n    at Promise.finally.completed (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)\n    at _callCircusTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)\n    at _runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)\n    at jestAdapter (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"PreferencesAPI Field Validation should validate valid preference values","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150355,"status":"failed","title":"should validate valid preference values"},{"ancestorTitles":["PreferencesAPI","Field Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Field Validation should reject invalid preference values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150355,"status":"passed","title":"should reject invalid preference values"},{"ancestorTitles":["PreferencesAPI","Field Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Field Validation should handle validation errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150356,"status":"passed","title":"should handle validation errors gracefully"},{"ancestorTitles":["PreferencesAPI","Field Descriptions"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"interaction\"\u001b[39m\nReceived string:    \u001b[31m\"Preferred way to interact with the bot (quick replies, natural language, or mixed)\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"interaction\"\u001b[39m\nReceived string:    \u001b[31m\"Preferred way to interact with the bot (quick replies, natural language, or mixed)\"\u001b[39m\n    at Object.toContain (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-api.test.ts:391:33)\n    at Promise.finally.completed (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)\n    at _callCircusTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)\n    at _runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)\n    at jestAdapter (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"PreferencesAPI Field Descriptions should return description for known fields","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150356,"status":"failed","title":"should return description for known fields"},{"ancestorTitles":["PreferencesAPI","Field Descriptions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Field Descriptions should return default message for unknown fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150356,"status":"passed","title":"should return default message for unknown fields"},{"ancestorTitles":["PreferencesAPI","Preference Suggestions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Preference Suggestions should generate preference suggestions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150356,"status":"passed","title":"should generate preference suggestions"},{"ancestorTitles":["PreferencesAPI","Preference Suggestions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Preference Suggestions should handle suggestion errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150356,"status":"passed","title":"should handle suggestion errors gracefully"},{"ancestorTitles":["PreferencesAPI","Export and Import"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Export and Import should export preferences","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150357,"status":"passed","title":"should export preferences"},{"ancestorTitles":["PreferencesAPI","Export and Import"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Export and Import should import preferences","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150357,"status":"passed","title":"should import preferences"},{"ancestorTitles":["PreferencesAPI","Reset Preferences"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Reset Preferences should reset preferences to defaults","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150357,"status":"passed","title":"should reset preferences to defaults"},{"ancestorTitles":["PreferencesAPI","Reset Preferences"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PreferencesAPI Reset Preferences should preserve specified fields when resetting","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150357,"status":"passed","title":"should preserve specified fields when resetting"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should get user preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150358,"status":"passed","title":"should get user preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-api.test.ts:531:32)"],"fullName":"Convenience Functions should update preference field using convenience function","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150358,"status":"failed","title":"should update preference field using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should bulk update preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150358,"status":"passed","title":"should bulk update preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should get UI preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150358,"status":"passed","title":"should get UI preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should update UI preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150358,"status":"passed","title":"should update UI preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should get notification preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150359,"status":"passed","title":"should get notification preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should update notification preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150359,"status":"passed","title":"should update notification preferences using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should search user preferences using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150359,"status":"passed","title":"should search user preferences using convenience function"}],"endTime":1758279150375,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesAPI › Get Preferences › should handle errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\n    Received function did not throw\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  95 |\u001b[39m             preferencesStorageManager\u001b[33m.\u001b[39mgetUserPreferences\u001b[33m.\u001b[39mmockRejectedValueOnce(\u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Storage error'\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  96 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  97 |\u001b[39m             \u001b[36mawait\u001b[39m expect(api\u001b[33m.\u001b[39mgetPreferences(\u001b[32m'user123'\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  98 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  99 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 100 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2mnode_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js\u001b[2m:2155:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-api.test.ts\u001b[39m\u001b[0m\u001b[2m:97:65)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesAPI › Update Preference Field › should update a single preference field\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 103 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m api\u001b[33m.\u001b[39mupdatePreferenceField(\u001b[32m'user123'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'ui.language'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'ja'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 105 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m             \u001b[36mconst\u001b[39m { preferencesStorageManager } \u001b[33m=\u001b[39m require(\u001b[32m'../preferences-storage'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m             expect(preferencesStorageManager\u001b[33m.\u001b[39mupdatePreferences)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'user123'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-api.test.ts\u001b[39m\u001b[0m\u001b[2m:105:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesAPI › Update Preference Field › should handle nested field updates\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 130 |\u001b[39m             )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 131 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 132 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 133 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m             \u001b[36mconst\u001b[39m { preferencesStorageManager } \u001b[33m=\u001b[39m require(\u001b[32m'../preferences-storage'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 135 |\u001b[39m             expect(preferencesStorageManager\u001b[33m.\u001b[39mupdatePreferences)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'user123'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-api.test.ts\u001b[39m\u001b[0m\u001b[2m:132:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesAPI › Bulk Update Preferences › should update multiple fields at once\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 152 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m api\u001b[33m.\u001b[39mbulkUpdatePreferences(\u001b[32m'user123'\u001b[39m\u001b[33m,\u001b[39m bulkUpdate)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 153 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 154 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 155 |\u001b[39m             expect(result\u001b[33m.\u001b[39mupdatedFields)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m                 \u001b[32m'ui.language'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m                 \u001b[32m'notifications.defaultReminderMinutes'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-api.test.ts\u001b[39m\u001b[0m\u001b[2m:154:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesAPI › Field Validation › should validate valid preference values\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 368 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m api\u001b[33m.\u001b[39mvalidatePreferenceValue(\u001b[32m'ui.language'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'ja'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 369 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 370 |\u001b[39m             expect(result\u001b[33m.\u001b[39mvalid)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 371 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 372 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 373 |\u001b[39m         it(\u001b[32m'should reject invalid preference values'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-api.test.ts\u001b[39m\u001b[0m\u001b[2m:370:34)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPreferencesAPI › Field Descriptions › should return description for known fields\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"interaction\"\u001b[39m\n    Received string:    \u001b[31m\"Preferred way to interact with the bot (quick replies, natural language, or mixed)\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 389 |\u001b[39m             \u001b[36mconst\u001b[39m description \u001b[33m=\u001b[39m api\u001b[33m.\u001b[39mgetFieldDescription(\u001b[32m'ui.preferredInteractionStyle'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 390 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 391 |\u001b[39m             expect(description)\u001b[33m.\u001b[39mtoContain(\u001b[32m'interaction'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 392 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 393 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 394 |\u001b[39m         it(\u001b[32m'should return default message for unknown fields'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toContain (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-api.test.ts\u001b[39m\u001b[0m\u001b[2m:391:33)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConvenience Functions › should update preference field using convenience function\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 529 |\u001b[39m         \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m updatePreferenceField(\u001b[32m'user123'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'ui.language'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'ja'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 530 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 531 |\u001b[39m         expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 532 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 533 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 534 |\u001b[39m     it(\u001b[32m'should bulk update preferences using convenience function'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/preferences-api.test.ts\u001b[39m\u001b[0m\u001b[2m:531:32)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/preferences-api.test.ts","startTime":1758279150268,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["SessionPersistenceManager","Session Persistence"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager Session Persistence should persist session successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279150565,"status":"passed","title":"should persist session successfully"},{"ancestorTitles":["SessionPersistenceManager","Session Persistence"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived function did not throw","pass":false},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived function did not throw"}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived function did not throw\n    at Object.toThrow (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js:2155:20)\n    at Object.toThrow (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/session-persistence.test.ts:79:71)\n    at Promise.finally.completed (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)\n    at _callCircusTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)\n    at _runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)\n    at jestAdapter (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-circus@30.0.5/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Volumes/Extreme Pro/dauberside.github.io-1/node_modules/.pnpm/jest-runner@30.0.5/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"SessionPersistenceManager Session Persistence should handle persistence errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150567,"status":"failed","title":"should handle persistence errors gracefully"},{"ancestorTitles":["SessionPersistenceManager","Session Recovery"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager Session Recovery should recover session successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279150573,"status":"passed","title":"should recover session successfully"},{"ancestorTitles":["SessionPersistenceManager","Session Recovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager Session Recovery should return NOT_FOUND for non-existent session","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150573,"status":"passed","title":"should return NOT_FOUND for non-existent session"},{"ancestorTitles":["SessionPersistenceManager","Session Recovery"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager Session Recovery should fail recovery for expired sessions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150574,"status":"passed","title":"should fail recovery for expired sessions"},{"ancestorTitles":["SessionPersistenceManager","Session Recovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager Session Recovery should recover expired sessions when includeExpired option is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150576,"status":"passed","title":"should recover expired sessions when includeExpired option is true"},{"ancestorTitles":["SessionPersistenceManager","Session Recovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager Session Recovery should fail recovery for old backups when maxAge is specified","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150577,"status":"passed","title":"should fail recovery for old backups when maxAge is specified"},{"ancestorTitles":["SessionPersistenceManager","Session Recovery"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager Session Recovery should validate checksum when requested","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150578,"status":"passed","title":"should validate checksum when requested"},{"ancestorTitles":["SessionPersistenceManager","User Session Recovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager User Session Recovery should recover all sessions for a user","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150581,"status":"passed","title":"should recover all sessions for a user"},{"ancestorTitles":["SessionPersistenceManager","User Session Recovery"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager User Session Recovery should handle mixed success/failure in user session recovery","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150582,"status":"passed","title":"should handle mixed success/failure in user session recovery"},{"ancestorTitles":["SessionPersistenceManager","Session Migration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager Session Migration should report no migration needed when versions match","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150582,"status":"passed","title":"should report no migration needed when versions match"},{"ancestorTitles":["SessionPersistenceManager","Session Migration"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/session-persistence.test.ts:282:36)"],"fullName":"SessionPersistenceManager Session Migration should handle migration errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150582,"status":"failed","title":"should handle migration errors gracefully"},{"ancestorTitles":["SessionPersistenceManager","Backup Cleanup"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SessionPersistenceManager Backup Cleanup should clean up expired backups","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150583,"status":"passed","title":"should clean up expired backups"},{"ancestorTitles":["SessionPersistenceManager","Backup Info Retrieval"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"expected":"sess_123_abc","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"sess_123_abc\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"sess_123_abc\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/session-persistence.test.ts:334:43)"],"fullName":"SessionPersistenceManager Backup Info Retrieval should get session backup info","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150583,"status":"failed","title":"should get session backup info"},{"ancestorTitles":["SessionPersistenceManager","Backup Info Retrieval"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m[]\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m[]\u001b[39m\n    at Object.toBeNull (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/session-persistence.test.ts:344:32)"],"fullName":"SessionPersistenceManager Backup Info Retrieval should return null for non-existent backup","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150583,"status":"failed","title":"should return null for non-existent backup"},{"ancestorTitles":["Convenience Functions"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should persist user session using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150584,"status":"passed","title":"should persist user session using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":"success","expected":"not_found","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"not_found\"\u001b[39m\nReceived: \u001b[31m\"success\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"not_found\"\u001b[39m\nReceived: \u001b[31m\"success\"\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/session-persistence.test.ts:381:31)"],"fullName":"Convenience Functions should recover user session using convenience function","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150598,"status":"failed","title":"should recover user session using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":[{"status":"failed","message":"Failed to recover user sessions","error":{"type":"system_error","code":"SYSTEM_ERROR_1758279150599","message":"User session recovery failed","userMessage":"システム内部でエラーが発生しました: User session recovery failed","severity":"high","suggestions":[],"recoverable":false,"retryable":false,"context":{"operationType":"session_recovery","operationStep":"user_recovery","timestamp":1758279150599,"userId":"user123"},"originalError":{},"timestamp":1758279150599,"errorId":"err_1758279150599_sstz3byni"}}],"expected":[],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  -  1\u001b[39m\n\u001b[31m+ Received  + 25\u001b[39m\n\n\u001b[32m- Array []\u001b[39m\n\u001b[31m+ Array [\u001b[39m\n\u001b[31m+   Object {\u001b[39m\n\u001b[31m+     \"error\": Object {\u001b[39m\n\u001b[31m+       \"code\": \"SYSTEM_ERROR_1758279150599\",\u001b[39m\n\u001b[31m+       \"context\": Object {\u001b[39m\n\u001b[31m+         \"operationStep\": \"user_recovery\",\u001b[39m\n\u001b[31m+         \"operationType\": \"session_recovery\",\u001b[39m\n\u001b[31m+         \"timestamp\": 1758279150599,\u001b[39m\n\u001b[31m+         \"userId\": \"user123\",\u001b[39m\n\u001b[31m+       },\u001b[39m\n\u001b[31m+       \"errorId\": \"err_1758279150599_sstz3byni\",\u001b[39m\n\u001b[31m+       \"message\": \"User session recovery failed\",\u001b[39m\n\u001b[31m+       \"originalError\": [TypeError: sessionIds is not iterable],\u001b[39m\n\u001b[31m+       \"recoverable\": false,\u001b[39m\n\u001b[31m+       \"retryable\": false,\u001b[39m\n\u001b[31m+       \"severity\": \"high\",\u001b[39m\n\u001b[31m+       \"suggestions\": Array [],\u001b[39m\n\u001b[31m+       \"timestamp\": 1758279150599,\u001b[39m\n\u001b[31m+       \"type\": \"system_error\",\u001b[39m\n\u001b[31m+       \"userMessage\": \"システム内部でエラーが発生しました: User session recovery failed\",\u001b[39m\n\u001b[31m+     },\u001b[39m\n\u001b[31m+     \"message\": \"Failed to recover user sessions\",\u001b[39m\n\u001b[31m+     \"status\": \"failed\",\u001b[39m\n\u001b[31m+   },\u001b[39m\n\u001b[31m+ ]\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  -  1\u001b[39m\n\u001b[31m+ Received  + 25\u001b[39m\n\n\u001b[32m- Array []\u001b[39m\n\u001b[31m+ Array [\u001b[39m\n\u001b[31m+   Object {\u001b[39m\n\u001b[31m+     \"error\": Object {\u001b[39m\n\u001b[31m+       \"code\": \"SYSTEM_ERROR_1758279150599\",\u001b[39m\n\u001b[31m+       \"context\": Object {\u001b[39m\n\u001b[31m+         \"operationStep\": \"user_recovery\",\u001b[39m\n\u001b[31m+         \"operationType\": \"session_recovery\",\u001b[39m\n\u001b[31m+         \"timestamp\": 1758279150599,\u001b[39m\n\u001b[31m+         \"userId\": \"user123\",\u001b[39m\n\u001b[31m+       },\u001b[39m\n\u001b[31m+       \"errorId\": \"err_1758279150599_sstz3byni\",\u001b[39m\n\u001b[31m+       \"message\": \"User session recovery failed\",\u001b[39m\n\u001b[31m+       \"originalError\": [TypeError: sessionIds is not iterable],\u001b[39m\n\u001b[31m+       \"recoverable\": false,\u001b[39m\n\u001b[31m+       \"retryable\": false,\u001b[39m\n\u001b[31m+       \"severity\": \"high\",\u001b[39m\n\u001b[31m+       \"suggestions\": Array [],\u001b[39m\n\u001b[31m+       \"timestamp\": 1758279150599,\u001b[39m\n\u001b[31m+       \"type\": \"system_error\",\u001b[39m\n\u001b[31m+       \"userMessage\": \"システム内部でエラーが発生しました: User session recovery failed\",\u001b[39m\n\u001b[31m+     },\u001b[39m\n\u001b[31m+     \"message\": \"Failed to recover user sessions\",\u001b[39m\n\u001b[31m+     \"status\": \"failed\",\u001b[39m\n\u001b[31m+   },\u001b[39m\n\u001b[31m+ ]\u001b[39m\n    at Object.toEqual (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/session-persistence.test.ts:390:25)"],"fullName":"Convenience Functions should recover all user sessions using convenience function","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150599,"status":"failed","title":"should recover all user sessions using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should migrate all sessions using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150600,"status":"passed","title":"should migrate all sessions using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should cleanup expired backups using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150600,"status":"passed","title":"should cleanup expired backups using convenience function"}],"endTime":1758279150611,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSessionPersistenceManager › Session Persistence › should handle persistence errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\n    Received function did not throw\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 |\u001b[39m             stashPostbackPayload\u001b[33m.\u001b[39mmockRejectedValueOnce(\u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Storage error'\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 78 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 79 |\u001b[39m             \u001b[36mawait\u001b[39m expect(manager\u001b[33m.\u001b[39mpersistSession(mockSession))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 81 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2mnode_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js\u001b[2m:2155:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/session-persistence.test.ts\u001b[39m\u001b[0m\u001b[2m:79:71)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSessionPersistenceManager › Session Migration › should handle migration errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 280 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m manager\u001b[33m.\u001b[39mmigrateSessions()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 281 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 282 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 283 |\u001b[39m             expect(result\u001b[33m.\u001b[39merrors)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 284 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 285 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/session-persistence.test.ts\u001b[39m\u001b[0m\u001b[2m:282:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSessionPersistenceManager › Backup Info Retrieval › should get session backup info\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"sess_123_abc\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 332 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 333 |\u001b[39m             expect(backupInfo)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 334 |\u001b[39m             expect(backupInfo\u001b[33m?\u001b[39m\u001b[33m.\u001b[39msessionId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'sess_123_abc'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 335 |\u001b[39m             expect(backupInfo\u001b[33m?\u001b[39m\u001b[33m.\u001b[39muserId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'user123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 336 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 337 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/session-persistence.test.ts\u001b[39m\u001b[0m\u001b[2m:334:43)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSessionPersistenceManager › Backup Info Retrieval › should return null for non-existent backup\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\n    Received: \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 342 |\u001b[39m             \u001b[36mconst\u001b[39m backupInfo \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m manager\u001b[33m.\u001b[39mgetSessionBackupInfo(\u001b[32m'nonexistent'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 343 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 344 |\u001b[39m             expect(backupInfo)\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 345 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 346 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 347 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeNull (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/session-persistence.test.ts\u001b[39m\u001b[0m\u001b[2m:344:32)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConvenience Functions › should recover user session using convenience function\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"not_found\"\u001b[39m\n    Received: \u001b[31m\"success\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 379 |\u001b[39m         \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m recoverUserSession(\u001b[32m'sess_123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 380 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 381 |\u001b[39m         expect(result\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[33mRecoveryStatus\u001b[39m\u001b[33m.\u001b[39m\u001b[33mNOT_FOUND\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 382 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 383 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 384 |\u001b[39m     it(\u001b[32m'should recover all user sessions using convenience function'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/session-persistence.test.ts\u001b[39m\u001b[0m\u001b[2m:381:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConvenience Functions › should recover all user sessions using convenience function\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  -  1\u001b[39m\n    \u001b[31m+ Received  + 25\u001b[39m\n\n    \u001b[32m- Array []\u001b[39m\n    \u001b[31m+ Array [\u001b[39m\n    \u001b[31m+   Object {\u001b[39m\n    \u001b[31m+     \"error\": Object {\u001b[39m\n    \u001b[31m+       \"code\": \"SYSTEM_ERROR_1758279150599\",\u001b[39m\n    \u001b[31m+       \"context\": Object {\u001b[39m\n    \u001b[31m+         \"operationStep\": \"user_recovery\",\u001b[39m\n    \u001b[31m+         \"operationType\": \"session_recovery\",\u001b[39m\n    \u001b[31m+         \"timestamp\": 1758279150599,\u001b[39m\n    \u001b[31m+         \"userId\": \"user123\",\u001b[39m\n    \u001b[31m+       },\u001b[39m\n    \u001b[31m+       \"errorId\": \"err_1758279150599_sstz3byni\",\u001b[39m\n    \u001b[31m+       \"message\": \"User session recovery failed\",\u001b[39m\n    \u001b[31m+       \"originalError\": [TypeError: sessionIds is not iterable],\u001b[39m\n    \u001b[31m+       \"recoverable\": false,\u001b[39m\n    \u001b[31m+       \"retryable\": false,\u001b[39m\n    \u001b[31m+       \"severity\": \"high\",\u001b[39m\n    \u001b[31m+       \"suggestions\": Array [],\u001b[39m\n    \u001b[31m+       \"timestamp\": 1758279150599,\u001b[39m\n    \u001b[31m+       \"type\": \"system_error\",\u001b[39m\n    \u001b[31m+       \"userMessage\": \"システム内部でエラーが発生しました: User session recovery failed\",\u001b[39m\n    \u001b[31m+     },\u001b[39m\n    \u001b[31m+     \"message\": \"Failed to recover user sessions\",\u001b[39m\n    \u001b[31m+     \"status\": \"failed\",\u001b[39m\n    \u001b[31m+   },\u001b[39m\n    \u001b[31m+ ]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 388 |\u001b[39m         \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m recoverAllUserSessions(\u001b[32m'user123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 389 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 390 |\u001b[39m         expect(results)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 391 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 392 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 393 |\u001b[39m     it(\u001b[32m'should migrate all sessions using convenience function'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/session-persistence.test.ts\u001b[39m\u001b[0m\u001b[2m:390:25)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/session-persistence.test.ts","startTime":1758279150385,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["OperationHistoryManager","Operation Recording"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"OperationHistoryManager Operation Recording should record a new operation successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150684,"status":"passed","title":"should record a new operation successfully"},{"ancestorTitles":["OperationHistoryManager","Operation Recording"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"OperationHistoryManager Operation Recording should generate appropriate descriptions for different operation types","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150688,"status":"passed","title":"should generate appropriate descriptions for different operation types"},{"ancestorTitles":["OperationHistoryManager","Operation Recording"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"OperationHistoryManager Operation Recording should handle operations with group and session IDs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150688,"status":"passed","title":"should handle operations with group and session IDs"},{"ancestorTitles":["OperationHistoryManager","Operation History Retrieval"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"OperationHistoryManager Operation History Retrieval should return empty array when no history exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150689,"status":"passed","title":"should return empty array when no history exists"},{"ancestorTitles":["OperationHistoryManager","Operation History Retrieval"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"OperationHistoryManager Operation History Retrieval should retrieve operation history with limit and offset","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150689,"status":"passed","title":"should retrieve operation history with limit and offset"},{"ancestorTitles":["OperationHistoryManager","Undo Operations"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/operation-history.test.ts:158:36)"],"fullName":"OperationHistoryManager Undo Operations should undo a reversible operation successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150689,"status":"failed","title":"should undo a reversible operation successfully"},{"ancestorTitles":["OperationHistoryManager","Undo Operations"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":"system_error","expected":"business_rule_violation","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"business_rule_violation\"\u001b[39m\nReceived: \u001b[31m\"system_error\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"business_rule_violation\"\u001b[39m\nReceived: \u001b[31m\"system_error\"\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/operation-history.test.ts:182:40)"],"fullName":"OperationHistoryManager Undo Operations should fail to undo non-reversible operation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150694,"status":"failed","title":"should fail to undo non-reversible operation"},{"ancestorTitles":["OperationHistoryManager","Undo Operations"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":"system_error","expected":"authorization_error","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mauthorization\u001b[27m_error\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7msystem\u001b[27m_error\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mauthorization\u001b[27m_error\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7msystem\u001b[27m_error\"\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/operation-history.test.ts:205:40)"],"fullName":"OperationHistoryManager Undo Operations should fail to undo operation by unauthorized user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150694,"status":"failed","title":"should fail to undo operation by unauthorized user"},{"ancestorTitles":["OperationHistoryManager","Undo Operations"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":"system_error","expected":"business_rule_violation","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"business_rule_violation\"\u001b[39m\nReceived: \u001b[31m\"system_error\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"business_rule_violation\"\u001b[39m\nReceived: \u001b[31m\"system_error\"\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/operation-history.test.ts:228:40)"],"fullName":"OperationHistoryManager Undo Operations should fail to undo already undone operation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150695,"status":"failed","title":"should fail to undo already undone operation"},{"ancestorTitles":["OperationHistoryManager","Bulk Undo Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"OperationHistoryManager Bulk Undo Operations should perform bulk undo within time range","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150695,"status":"passed","title":"should perform bulk undo within time range"},{"ancestorTitles":["OperationHistoryManager","Bulk Undo Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"OperationHistoryManager Bulk Undo Operations should handle mixed success/failure in bulk undo","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150696,"status":"passed","title":"should handle mixed success/failure in bulk undo"},{"ancestorTitles":["OperationHistoryManager","Operation Cleanup"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"OperationHistoryManager Operation Cleanup should clear user history successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150698,"status":"passed","title":"should clear user history successfully"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should record user operation using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150698,"status":"passed","title":"should record user operation using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/operation-history.test.ts:370:32)"],"fullName":"Convenience Functions should undo user operation using convenience function","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279150698,"status":"failed","title":"should undo user operation using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should get user operation history using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150698,"status":"passed","title":"should get user operation history using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should perform bulk undo using convenience function","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150699,"status":"passed","title":"should perform bulk undo using convenience function"}],"endTime":1758279150707,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOperationHistoryManager › Undo Operations › should undo a reversible operation successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m manager\u001b[33m.\u001b[39mundoOperation(\u001b[32m'user123'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'op123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 158 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 159 |\u001b[39m             expect(result\u001b[33m.\u001b[39mrestoredState)\u001b[33m.\u001b[39mtoEqual({ time\u001b[33m:\u001b[39m \u001b[32m'14:00'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 160 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 161 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/operation-history.test.ts\u001b[39m\u001b[0m\u001b[2m:158:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOperationHistoryManager › Undo Operations › should fail to undo non-reversible operation\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"business_rule_violation\"\u001b[39m\n    Received: \u001b[31m\"system_error\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 180 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 181 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 182 |\u001b[39m             expect(result\u001b[33m.\u001b[39merror\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mtype)\u001b[33m.\u001b[39mtoBe(\u001b[32m'business_rule_violation'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 183 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 184 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 185 |\u001b[39m         it(\u001b[32m'should fail to undo operation by unauthorized user'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/operation-history.test.ts\u001b[39m\u001b[0m\u001b[2m:182:40)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOperationHistoryManager › Undo Operations › should fail to undo operation by unauthorized user\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7mauthorization\u001b[27m_error\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7msystem\u001b[27m_error\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 203 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 204 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 205 |\u001b[39m             expect(result\u001b[33m.\u001b[39merror\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mtype)\u001b[33m.\u001b[39mtoBe(\u001b[32m'authorization_error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 206 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 207 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 208 |\u001b[39m         it(\u001b[32m'should fail to undo already undone operation'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/operation-history.test.ts\u001b[39m\u001b[0m\u001b[2m:205:40)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOperationHistoryManager › Undo Operations › should fail to undo already undone operation\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"business_rule_violation\"\u001b[39m\n    Received: \u001b[31m\"system_error\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 226 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 227 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 228 |\u001b[39m             expect(result\u001b[33m.\u001b[39merror\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mtype)\u001b[33m.\u001b[39mtoBe(\u001b[32m'business_rule_violation'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 231 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/operation-history.test.ts\u001b[39m\u001b[0m\u001b[2m:228:40)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConvenience Functions › should undo user operation using convenience function\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 368 |\u001b[39m         \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m undoUserOperation(\u001b[32m'user123'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'op123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 369 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 370 |\u001b[39m         expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 371 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 372 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 373 |\u001b[39m     it(\u001b[32m'should get user operation history using convenience function'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/lib/__tests__/operation-history.test.ts\u001b[39m\u001b[0m\u001b[2m:370:32)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/operation-history.test.ts","startTime":1758279150621,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["MultiStageReminderManager","getInstance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager getInstance should return singleton instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150902,"status":"passed","title":"should return singleton instance"},{"ancestorTitles":["MultiStageReminderManager","createMultiStageReminders"],"duration":21,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager createMultiStageReminders should create multiple reminder stages for critical events","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150903,"status":"passed","title":"should create multiple reminder stages for critical events"},{"ancestorTitles":["MultiStageReminderManager","createMultiStageReminders"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager createMultiStageReminders should create appropriate stages based on event importance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150924,"status":"passed","title":"should create appropriate stages based on event importance"},{"ancestorTitles":["MultiStageReminderManager","createMultiStageReminders"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager createMultiStageReminders should respect user preferences for event types","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150924,"status":"passed","title":"should respect user preferences for event types"},{"ancestorTitles":["MultiStageReminderManager","createMultiStageReminders"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager createMultiStageReminders should handle events too close to current time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150925,"status":"passed","title":"should handle events too close to current time"},{"ancestorTitles":["MultiStageReminderManager","createMultiStageReminders"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager createMultiStageReminders should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150926,"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["MultiStageReminderManager","snoozeStageReminder"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager snoozeStageReminder should successfully snooze a reminder","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758279150933,"status":"passed","title":"should successfully snooze a reminder"},{"ancestorTitles":["MultiStageReminderManager","snoozeStageReminder"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager snoozeStageReminder should escalate when max snoozes reached","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150933,"status":"passed","title":"should escalate when max snoozes reached"},{"ancestorTitles":["MultiStageReminderManager","snoozeStageReminder"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager snoozeStageReminder should handle non-existent reminder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150936,"status":"passed","title":"should handle non-existent reminder"},{"ancestorTitles":["MultiStageReminderManager","snoozeStageReminder"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager snoozeStageReminder should handle snooze disabled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150937,"status":"passed","title":"should handle snooze disabled"},{"ancestorTitles":["MultiStageReminderManager","postponeEvent"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager postponeEvent should successfully postpone an event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150937,"status":"passed","title":"should successfully postpone an event"},{"ancestorTitles":["MultiStageReminderManager","postponeEvent"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager postponeEvent should handle non-existent event","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150938,"status":"passed","title":"should handle non-existent event"},{"ancestorTitles":["MultiStageReminderManager","getSnoozeOptions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager getSnoozeOptions should return user-configured snooze options","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150938,"status":"passed","title":"should return user-configured snooze options"},{"ancestorTitles":["MultiStageReminderManager","getSnoozeOptions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager getSnoozeOptions should return default options when reminder not found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150939,"status":"passed","title":"should return default options when reminder not found"},{"ancestorTitles":["MultiStageReminderManager","getEscalationStatus"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager getEscalationStatus should return escalation status for event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150939,"status":"passed","title":"should return escalation status for event"},{"ancestorTitles":["MultiStageReminderManager","getEscalationStatus"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager getEscalationStatus should handle events without escalation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150939,"status":"passed","title":"should handle events without escalation"},{"ancestorTitles":["MultiStageReminderManager","getEscalationStatus"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager getEscalationStatus should handle non-existent event","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279150939,"status":"passed","title":"should handle non-existent event"},{"ancestorTitles":["MultiStageReminderManager","Stage Condition Evaluation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager Stage Condition Evaluation should correctly evaluate importance conditions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150939,"status":"passed","title":"should correctly evaluate importance conditions"},{"ancestorTitles":["MultiStageReminderManager","Stage Condition Evaluation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager Stage Condition Evaluation should correctly evaluate event type conditions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279150940,"status":"passed","title":"should correctly evaluate event type conditions"},{"ancestorTitles":["MultiStageReminderManager","Message Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MultiStageReminderManager Message Generation should generate appropriate stage messages","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279150941,"status":"passed","title":"should generate appropriate stage messages"}],"endTime":1758279150942,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/multi-stage-reminder.test.ts","startTime":1758279150720,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Sample Test"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Sample Test renders a simple text","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151130,"status":"passed","title":"renders a simple text"}],"endTime":1758279151141,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/__tests__/dauber.test.tsx","startTime":1758279151001,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CustomizableNotificationSystem","getInstance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem getInstance should return singleton instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151198,"status":"passed","title":"should return singleton instance"},{"ancestorTitles":["CustomizableNotificationSystem","renderNotification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem renderNotification should render notification using default template","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151198,"status":"passed","title":"should render notification using default template"},{"ancestorTitles":["CustomizableNotificationSystem","renderNotification"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem renderNotification should render weather notification template","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151199,"status":"passed","title":"should render weather notification template"},{"ancestorTitles":["CustomizableNotificationSystem","renderNotification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem renderNotification should render traffic notification template","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151199,"status":"passed","title":"should render traffic notification template"},{"ancestorTitles":["CustomizableNotificationSystem","renderNotification"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem renderNotification should handle missing template","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151200,"status":"passed","title":"should handle missing template"},{"ancestorTitles":["CustomizableNotificationSystem","renderNotification"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem renderNotification should handle conditional content in templates","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151209,"status":"passed","title":"should handle conditional content in templates"},{"ancestorTitles":["CustomizableNotificationSystem","sendNotification"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem sendNotification should send notification successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151210,"status":"passed","title":"should send notification successfully"},{"ancestorTitles":["CustomizableNotificationSystem","sendNotification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem sendNotification should handle delivery failures","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151210,"status":"passed","title":"should handle delivery failures"},{"ancestorTitles":["CustomizableNotificationSystem","sendNotification"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem sendNotification should respect delivery configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151211,"status":"passed","title":"should respect delivery configuration"},{"ancestorTitles":["CustomizableNotificationSystem","createCustomTemplate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem createCustomTemplate should create custom template successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151211,"status":"passed","title":"should create custom template successfully"},{"ancestorTitles":["CustomizableNotificationSystem","createCustomTemplate"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem createCustomTemplate should validate template before creation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151211,"status":"passed","title":"should validate template before creation"},{"ancestorTitles":["CustomizableNotificationSystem","createCustomTemplate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem createCustomTemplate should validate template syntax","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151212,"status":"passed","title":"should validate template syntax"},{"ancestorTitles":["CustomizableNotificationSystem","updateCustomTemplate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem updateCustomTemplate should update custom template successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151212,"status":"passed","title":"should update custom template successfully"},{"ancestorTitles":["CustomizableNotificationSystem","updateCustomTemplate"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem updateCustomTemplate should not allow updating default templates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151212,"status":"passed","title":"should not allow updating default templates"},{"ancestorTitles":["CustomizableNotificationSystem","updateCustomTemplate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem updateCustomTemplate should handle non-existent template","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151213,"status":"passed","title":"should handle non-existent template"},{"ancestorTitles":["CustomizableNotificationSystem","deleteCustomTemplate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem deleteCustomTemplate should delete custom template successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151213,"status":"passed","title":"should delete custom template successfully"},{"ancestorTitles":["CustomizableNotificationSystem","deleteCustomTemplate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem deleteCustomTemplate should not allow deleting default templates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151213,"status":"passed","title":"should not allow deleting default templates"},{"ancestorTitles":["CustomizableNotificationSystem","getAvailableTemplates"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem getAvailableTemplates should return default templates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151213,"status":"passed","title":"should return default templates"},{"ancestorTitles":["CustomizableNotificationSystem","getAvailableTemplates"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem getAvailableTemplates should sort templates by category and name","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279151214,"status":"passed","title":"should sort templates by category and name"},{"ancestorTitles":["CustomizableNotificationSystem","previewTemplate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem previewTemplate should preview template with sample data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151214,"status":"passed","title":"should preview template with sample data"},{"ancestorTitles":["CustomizableNotificationSystem","previewTemplate"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem previewTemplate should handle missing template in preview","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151214,"status":"passed","title":"should handle missing template in preview"},{"ancestorTitles":["CustomizableNotificationSystem","configureQuietHours"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem configureQuietHours should configure quiet hours successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151214,"status":"passed","title":"should configure quiet hours successfully"},{"ancestorTitles":["CustomizableNotificationSystem","configureQuietHours"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem configureQuietHours should validate quiet hours format","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151215,"status":"passed","title":"should validate quiet hours format"},{"ancestorTitles":["CustomizableNotificationSystem","configureQuietHours"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem configureQuietHours should require timezone","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151215,"status":"passed","title":"should require timezone"},{"ancestorTitles":["CustomizableNotificationSystem","configureDoNotDisturb"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem configureDoNotDisturb should configure DND successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151216,"status":"passed","title":"should configure DND successfully"},{"ancestorTitles":["CustomizableNotificationSystem","configureDoNotDisturb"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem configureDoNotDisturb should set end time when duration is provided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151216,"status":"passed","title":"should set end time when duration is provided"},{"ancestorTitles":["CustomizableNotificationSystem","canSendNotification"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem canSendNotification should allow notification when no restrictions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151216,"status":"passed","title":"should allow notification when no restrictions"},{"ancestorTitles":["CustomizableNotificationSystem","canSendNotification"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem canSendNotification should block notification during DND complete mode","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151216,"status":"passed","title":"should block notification during DND complete mode"},{"ancestorTitles":["CustomizableNotificationSystem","canSendNotification"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem canSendNotification should allow urgent notifications during DND urgent_only mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151216,"status":"passed","title":"should allow urgent notifications during DND urgent_only mode"},{"ancestorTitles":["CustomizableNotificationSystem","canSendNotification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem canSendNotification should handle expired DND settings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151216,"status":"passed","title":"should handle expired DND settings"},{"ancestorTitles":["CustomizableNotificationSystem","getDeliveryStats"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CustomizableNotificationSystem getDeliveryStats should return delivery statistics","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1758279151217,"status":"passed","title":"should return delivery statistics"}],"endTime":1758279151219,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/notification-system.test.ts","startTime":1758279151146,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SmartReminderEngine","scheduleSmartReminder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine scheduleSmartReminder should schedule multiple smart reminders based on user preferences","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151297,"status":"passed","title":"should schedule multiple smart reminders based on user preferences"},{"ancestorTitles":["SmartReminderEngine","scheduleSmartReminder"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine scheduleSmartReminder should create preparation reminder for events that need preparation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151298,"status":"passed","title":"should create preparation reminder for events that need preparation"},{"ancestorTitles":["SmartReminderEngine","scheduleSmartReminder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine scheduleSmartReminder should create departure reminder for events requiring travel","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151301,"status":"passed","title":"should create departure reminder for events requiring travel"},{"ancestorTitles":["SmartReminderEngine","scheduleSmartReminder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine scheduleSmartReminder should handle critical importance events with multiple reminders","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151302,"status":"passed","title":"should handle critical importance events with multiple reminders"},{"ancestorTitles":["SmartReminderEngine","scheduleSmartReminder"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine scheduleSmartReminder should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151303,"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["SmartReminderEngine","updateRemindersForEvent"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine updateRemindersForEvent should cancel existing reminders and create new ones","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151313,"status":"passed","title":"should cancel existing reminders and create new ones"},{"ancestorTitles":["SmartReminderEngine","cancelRemindersForEvent"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine cancelRemindersForEvent should cancel all reminders for an event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151315,"status":"passed","title":"should cancel all reminders for an event"},{"ancestorTitles":["SmartReminderEngine","processUserResponse"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine processUserResponse should handle snooze response","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151316,"status":"passed","title":"should handle snooze response"},{"ancestorTitles":["SmartReminderEngine","processUserResponse"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine processUserResponse should handle dismissed response","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151316,"status":"passed","title":"should handle dismissed response"},{"ancestorTitles":["SmartReminderEngine","processUserResponse"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine processUserResponse should handle acknowledged response","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151316,"status":"passed","title":"should handle acknowledged response"},{"ancestorTitles":["SmartReminderEngine","processUserResponse"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine processUserResponse should handle rescheduled response","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151316,"status":"passed","title":"should handle rescheduled response"},{"ancestorTitles":["SmartReminderEngine","processUserResponse"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine processUserResponse should handle non-existent reminder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151317,"status":"passed","title":"should handle non-existent reminder"},{"ancestorTitles":["SmartReminderEngine","getReminderStats"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine getReminderStats should calculate reminder statistics","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758279151317,"status":"passed","title":"should calculate reminder statistics"},{"ancestorTitles":["SmartReminderEngine","getReminderStats"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine getReminderStats should return empty stats when no reminders exist","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151317,"status":"passed","title":"should return empty stats when no reminders exist"},{"ancestorTitles":["SmartReminderEngine","processDueSmartReminders"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine processDueSmartReminders should process and deliver due reminders","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151317,"status":"passed","title":"should process and deliver due reminders"},{"ancestorTitles":["SmartReminderEngine","processDueSmartReminders"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine processDueSmartReminders should handle delivery failures gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151318,"status":"passed","title":"should handle delivery failures gracefully"},{"ancestorTitles":["SmartReminderEngine","Event Context Building"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine Event Context Building should detect meeting event type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151318,"status":"passed","title":"should detect meeting event type"},{"ancestorTitles":["SmartReminderEngine","Event Context Building"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine Event Context Building should detect high importance events","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151318,"status":"passed","title":"should detect high importance events"},{"ancestorTitles":["SmartReminderEngine","Event Context Building"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine Event Context Building should handle online events without travel time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151319,"status":"passed","title":"should handle online events without travel time"},{"ancestorTitles":["SmartReminderEngine","Message Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine Message Generation should generate appropriate messages for different reminder types","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1758279151319,"status":"passed","title":"should generate appropriate messages for different reminder types"}],"endTime":1758279151320,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/smart-reminder-engine.test.ts","startTime":1758279151253,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ClarificationSystem","Clarification Request Generation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Request Generation should generate clarification request for time ambiguity","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758279151495,"status":"passed","title":"should generate clarification request for time ambiguity"},{"ancestorTitles":["ClarificationSystem","Clarification Request Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Request Generation should generate guided input for complex time ambiguity","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151496,"status":"passed","title":"should generate guided input for complex time ambiguity"},{"ancestorTitles":["ClarificationSystem","Clarification Request Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Request Generation should generate confirmation for reference ambiguity","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151496,"status":"passed","title":"should generate confirmation for reference ambiguity"},{"ancestorTitles":["ClarificationSystem","Clarification Request Generation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Request Generation should set high priority for intent ambiguity","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151496,"status":"passed","title":"should set high priority for intent ambiguity"},{"ancestorTitles":["ClarificationSystem","Clarification Request Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Request Generation should include conversation context in question","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151497,"status":"passed","title":"should include conversation context in question"},{"ancestorTitles":["ClarificationSystem","Clarification Request Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Request Generation should store clarification request","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151497,"status":"passed","title":"should store clarification request"},{"ancestorTitles":["ClarificationSystem","Clarification Response Processing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Response Processing should process multiple choice response","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151497,"status":"passed","title":"should process multiple choice response"},{"ancestorTitles":["ClarificationSystem","Clarification Response Processing"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Response Processing should process free text response","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151498,"status":"passed","title":"should process free text response"},{"ancestorTitles":["ClarificationSystem","Clarification Response Processing"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Response Processing should handle expired clarification requests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151498,"status":"passed","title":"should handle expired clarification requests"},{"ancestorTitles":["ClarificationSystem","Clarification Response Processing"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Response Processing should handle missing clarification requests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151506,"status":"passed","title":"should handle missing clarification requests"},{"ancestorTitles":["ClarificationSystem","Clarification Response Processing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Clarification Response Processing should store learning data on successful resolution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151506,"status":"passed","title":"should store learning data on successful resolution"},{"ancestorTitles":["ClarificationSystem","User Feedback Collection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem User Feedback Collection should collect positive feedback","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151507,"status":"passed","title":"should collect positive feedback"},{"ancestorTitles":["ClarificationSystem","User Feedback Collection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem User Feedback Collection should collect negative feedback with correction","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151507,"status":"passed","title":"should collect negative feedback with correction"},{"ancestorTitles":["ClarificationSystem","User Feedback Collection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem User Feedback Collection should update feedback index","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151507,"status":"passed","title":"should update feedback index"},{"ancestorTitles":["ClarificationSystem","Learning-Based Suggestions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Learning-Based Suggestions should provide suggestions based on user patterns","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151508,"status":"passed","title":"should provide suggestions based on user patterns"},{"ancestorTitles":["ClarificationSystem","Learning-Based Suggestions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Learning-Based Suggestions should return empty array when no learning data exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151508,"status":"passed","title":"should return empty array when no learning data exists"},{"ancestorTitles":["ClarificationSystem","Learning-Based Suggestions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Learning-Based Suggestions should sort suggestions by confidence and frequency","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151508,"status":"passed","title":"should sort suggestions by confidence and frequency"},{"ancestorTitles":["ClarificationSystem","Disambiguation UI Generation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Disambiguation UI Generation should generate multiple choice UI","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151508,"status":"passed","title":"should generate multiple choice UI"},{"ancestorTitles":["ClarificationSystem","Disambiguation UI Generation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Disambiguation UI Generation should generate confirmation UI","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151509,"status":"passed","title":"should generate confirmation UI"},{"ancestorTitles":["ClarificationSystem","Disambiguation UI Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Disambiguation UI Generation should generate free text UI","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151510,"status":"passed","title":"should generate free text UI"},{"ancestorTitles":["ClarificationSystem","Disambiguation UI Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Disambiguation UI Generation should generate guided input UI","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151510,"status":"passed","title":"should generate guided input UI"},{"ancestorTitles":["ClarificationSystem","Feedback Statistics"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Feedback Statistics should calculate user feedback statistics","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151511,"status":"passed","title":"should calculate user feedback statistics"},{"ancestorTitles":["ClarificationSystem","Feedback Statistics"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ClarificationSystem Feedback Statistics should return default stats when no feedback exists","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151511,"status":"passed","title":"should return default stats when no feedback exists"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should generate clarification using convenience function","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151511,"status":"passed","title":"should generate clarification using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should process clarification using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151511,"status":"passed","title":"should process clarification using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should collect feedback using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151511,"status":"passed","title":"should collect feedback using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should get learning suggestions using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151512,"status":"passed","title":"should get learning suggestions using convenience function"}],"endTime":1758279151512,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/clarification-system.test.ts","startTime":1758279151346,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ContextAwareScheduler","getInstance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler getInstance should return singleton instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151559,"status":"passed","title":"should return singleton instance"},{"ancestorTitles":["ContextAwareScheduler","calculateContextAwareReminder"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler calculateContextAwareReminder should calculate basic reminder timing without external factors","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1758279151559,"status":"passed","title":"should calculate basic reminder timing without external factors"},{"ancestorTitles":["ContextAwareScheduler","calculateContextAwareReminder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler calculateContextAwareReminder should adjust timing for weather conditions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151561,"status":"passed","title":"should adjust timing for weather conditions"},{"ancestorTitles":["ContextAwareScheduler","calculateContextAwareReminder"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler calculateContextAwareReminder should adjust timing for traffic conditions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151562,"status":"passed","title":"should adjust timing for traffic conditions"},{"ancestorTitles":["ContextAwareScheduler","calculateContextAwareReminder"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler calculateContextAwareReminder should handle API failures gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151562,"status":"passed","title":"should handle API failures gracefully"},{"ancestorTitles":["ContextAwareScheduler","calculateContextAwareReminder"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler calculateContextAwareReminder should adjust for time of day (rush hour)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151569,"status":"passed","title":"should adjust for time of day (rush hour)"},{"ancestorTitles":["ContextAwareScheduler","calculateContextAwareReminder"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler calculateContextAwareReminder should not adjust past current time","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151569,"status":"passed","title":"should not adjust past current time"},{"ancestorTitles":["ContextAwareScheduler","getWeatherInfo"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler getWeatherInfo should fetch and parse weather information","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151569,"status":"passed","title":"should fetch and parse weather information"},{"ancestorTitles":["ContextAwareScheduler","getWeatherInfo"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler getWeatherInfo should use cached weather data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151570,"status":"passed","title":"should use cached weather data"},{"ancestorTitles":["ContextAwareScheduler","getWeatherInfo"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler getWeatherInfo should handle weather API errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151570,"status":"passed","title":"should handle weather API errors"},{"ancestorTitles":["ContextAwareScheduler","getWeatherInfo"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler getWeatherInfo should return null when API key is not configured","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151570,"status":"passed","title":"should return null when API key is not configured"},{"ancestorTitles":["ContextAwareScheduler","getTrafficInfo"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler getTrafficInfo should fetch and parse traffic information","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151570,"status":"passed","title":"should fetch and parse traffic information"},{"ancestorTitles":["ContextAwareScheduler","getTrafficInfo"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler getTrafficInfo should use cached traffic data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151571,"status":"passed","title":"should use cached traffic data"},{"ancestorTitles":["ContextAwareScheduler","getTrafficInfo"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler getTrafficInfo should handle traffic API errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151571,"status":"passed","title":"should handle traffic API errors"},{"ancestorTitles":["ContextAwareScheduler","getTrafficInfo"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler getTrafficInfo should return null when API key is not configured","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151572,"status":"passed","title":"should return null when API key is not configured"},{"ancestorTitles":["ContextAwareScheduler","clearCaches"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ContextAwareScheduler clearCaches should clear weather and traffic caches","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151572,"status":"passed","title":"should clear weather and traffic caches"}],"endTime":1758279151572,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/context-aware-scheduler.test.ts","startTime":1758279151520,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["EnhancedNLPProcessor","Process Input"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Process Input should process user input with context awareness","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151622,"status":"passed","title":"should process user input with context awareness"},{"ancestorTitles":["EnhancedNLPProcessor","Process Input"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Process Input should handle processing errors gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151623,"status":"passed","title":"should handle processing errors gracefully"},{"ancestorTitles":["EnhancedNLPProcessor","Process Input"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Process Input should detect ambiguities in user input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151630,"status":"passed","title":"should detect ambiguities in user input"},{"ancestorTitles":["EnhancedNLPProcessor","Intent Extraction"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Intent Extraction should extract schedule creation intent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151631,"status":"passed","title":"should extract schedule creation intent"},{"ancestorTitles":["EnhancedNLPProcessor","Intent Extraction"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Intent Extraction should extract schedule edit intent","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151631,"status":"passed","title":"should extract schedule edit intent"},{"ancestorTitles":["EnhancedNLPProcessor","Intent Extraction"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Intent Extraction should extract schedule query intent","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151631,"status":"passed","title":"should extract schedule query intent"},{"ancestorTitles":["EnhancedNLPProcessor","Intent Extraction"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Intent Extraction should fall back to rule-based intent extraction","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151632,"status":"passed","title":"should fall back to rule-based intent extraction"},{"ancestorTitles":["EnhancedNLPProcessor","Intent Extraction"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Intent Extraction should return unclear intent for ambiguous input","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151632,"status":"passed","title":"should return unclear intent for ambiguous input"},{"ancestorTitles":["EnhancedNLPProcessor","Entity Extraction"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Entity Extraction should extract date/time entities","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151632,"status":"passed","title":"should extract date/time entities"},{"ancestorTitles":["EnhancedNLPProcessor","Entity Extraction"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Entity Extraction should extract location entities","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151633,"status":"passed","title":"should extract location entities"},{"ancestorTitles":["EnhancedNLPProcessor","Entity Extraction"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Entity Extraction should extract location entities with @ format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151633,"status":"passed","title":"should extract location entities with @ format"},{"ancestorTitles":["EnhancedNLPProcessor","Entity Extraction"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Entity Extraction should extract person entities","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151633,"status":"passed","title":"should extract person entities"},{"ancestorTitles":["EnhancedNLPProcessor","Entity Extraction"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Entity Extraction should extract event type entities","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151634,"status":"passed","title":"should extract event type entities"},{"ancestorTitles":["EnhancedNLPProcessor","Entity Extraction"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Entity Extraction should extract duration entities","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151634,"status":"passed","title":"should extract duration entities"},{"ancestorTitles":["EnhancedNLPProcessor","Entity Extraction"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Entity Extraction should use user preferences for location extraction","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151634,"status":"passed","title":"should use user preferences for location extraction"},{"ancestorTitles":["EnhancedNLPProcessor","Ambiguity Detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Ambiguity Detection should detect time ambiguities","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151634,"status":"passed","title":"should detect time ambiguities"},{"ancestorTitles":["EnhancedNLPProcessor","Ambiguity Detection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Ambiguity Detection should detect intent ambiguities for low confidence","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151635,"status":"passed","title":"should detect intent ambiguities for low confidence"},{"ancestorTitles":["EnhancedNLPProcessor","Suggestion Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Suggestion Generation should generate clarification suggestions for ambiguities","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151635,"status":"passed","title":"should generate clarification suggestions for ambiguities"},{"ancestorTitles":["EnhancedNLPProcessor","Suggestion Generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Suggestion Generation should generate auto-completion suggestions for missing info","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151635,"status":"passed","title":"should generate auto-completion suggestions for missing info"},{"ancestorTitles":["EnhancedNLPProcessor","Suggestion Generation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Suggestion Generation should generate context suggestions based on existing events","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151635,"status":"passed","title":"should generate context suggestions based on existing events"},{"ancestorTitles":["EnhancedNLPProcessor","Confidence Calculation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Confidence Calculation should boost confidence for high-confidence entities","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151636,"status":"passed","title":"should boost confidence for high-confidence entities"},{"ancestorTitles":["EnhancedNLPProcessor","Confidence Calculation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Confidence Calculation should reduce confidence for ambiguities","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151636,"status":"passed","title":"should reduce confidence for ambiguities"},{"ancestorTitles":["EnhancedNLPProcessor","Ambiguity Resolution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Ambiguity Resolution should attempt context-based disambiguation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151636,"status":"passed","title":"should attempt context-based disambiguation"},{"ancestorTitles":["EnhancedNLPProcessor","Ambiguity Resolution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedNLPProcessor Ambiguity Resolution should fall back to statistical disambiguation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151636,"status":"passed","title":"should fall back to statistical disambiguation"},{"ancestorTitles":["Convenience Functions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should process user input using convenience function","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151636,"status":"passed","title":"should process user input using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should extract intent using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151637,"status":"passed","title":"should extract intent using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should extract entities using convenience function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151637,"status":"passed","title":"should extract entities using convenience function"},{"ancestorTitles":["Convenience Functions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Convenience Functions should resolve ambiguity using convenience function","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151637,"status":"passed","title":"should resolve ambiguity using convenience function"}],"endTime":1758279151637,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/enhanced-nlp.test.ts","startTime":1758279151585,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SmartReminderEngine","getInstance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine getInstance should return singleton instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151683,"status":"passed","title":"should return singleton instance"},{"ancestorTitles":["SmartReminderEngine","scheduleSmartReminder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine scheduleSmartReminder should schedule reminders successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151684,"status":"passed","title":"should schedule reminders successfully"},{"ancestorTitles":["SmartReminderEngine","scheduleSmartReminder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine scheduleSmartReminder should handle meeting events with preparation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151685,"status":"passed","title":"should handle meeting events with preparation"},{"ancestorTitles":["SmartReminderEngine","scheduleSmartReminder"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine scheduleSmartReminder should handle online events","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151686,"status":"passed","title":"should handle online events"},{"ancestorTitles":["SmartReminderEngine","cancelRemindersForEvent"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine cancelRemindersForEvent should cancel reminders for event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151686,"status":"passed","title":"should cancel reminders for event"},{"ancestorTitles":["SmartReminderEngine","getReminderStats"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine getReminderStats should return stats object","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151686,"status":"passed","title":"should return stats object"},{"ancestorTitles":["SmartReminderEngine","processDueSmartReminders"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SmartReminderEngine processDueSmartReminders should process reminders and return stats","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151686,"status":"passed","title":"should process reminders and return stats"}],"endTime":1758279151687,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/smart-reminder-engine-simple.test.ts","startTime":1758279151648,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ErrorMessageGenerator","generateUserMessage"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateUserMessage should generate user-friendly message for invalid date time error","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758279151746,"status":"passed","title":"should generate user-friendly message for invalid date time error"},{"ancestorTitles":["ErrorMessageGenerator","generateUserMessage"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateUserMessage should generate message for schedule conflict with recovery options","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151747,"status":"passed","title":"should generate message for schedule conflict with recovery options"},{"ancestorTitles":["ErrorMessageGenerator","generateUserMessage"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateUserMessage should generate message for network error with retry options","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151747,"status":"passed","title":"should generate message for network error with retry options"},{"ancestorTitles":["ErrorMessageGenerator","generateUserMessage"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateUserMessage should personalize message for beginner users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151747,"status":"passed","title":"should personalize message for beginner users"},{"ancestorTitles":["ErrorMessageGenerator","generateUserMessage"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateUserMessage should add context for repeated errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151747,"status":"passed","title":"should add context for repeated errors"},{"ancestorTitles":["ErrorMessageGenerator","generateSuggestions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateSuggestions should generate appropriate suggestions for user input errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151748,"status":"passed","title":"should generate appropriate suggestions for user input errors"},{"ancestorTitles":["ErrorMessageGenerator","generateSuggestions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateSuggestions should limit suggestions to 5 items","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151748,"status":"passed","title":"should limit suggestions to 5 items"},{"ancestorTitles":["ErrorMessageGenerator","generateSuggestions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateSuggestions should add contextual suggestions for frequent errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151748,"status":"passed","title":"should add contextual suggestions for frequent errors"},{"ancestorTitles":["ErrorMessageGenerator","generateRecoveryInstructions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateRecoveryInstructions should generate step-by-step instructions for date time errors","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758279151748,"status":"passed","title":"should generate step-by-step instructions for date time errors"},{"ancestorTitles":["ErrorMessageGenerator","generateRecoveryInstructions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateRecoveryInstructions should generate instructions for schedule conflicts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151748,"status":"passed","title":"should generate instructions for schedule conflicts"},{"ancestorTitles":["ErrorMessageGenerator","generateRecoveryInstructions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator generateRecoveryInstructions should generate network troubleshooting instructions","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151748,"status":"passed","title":"should generate network troubleshooting instructions"},{"ancestorTitles":["ErrorMessageGenerator","advanced user context"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorMessageGenerator advanced user context should provide technical details for advanced users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151749,"status":"passed","title":"should provide technical details for advanced users"},{"ancestorTitles":["formatErrorMessageForLine"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"formatErrorMessageForLine should format basic error message for LINE display","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1758279151749,"status":"passed","title":"should format basic error message for LINE display"},{"ancestorTitles":["formatErrorMessageForLine"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"formatErrorMessageForLine should include primary recovery option when available","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151751,"status":"passed","title":"should include primary recovery option when available"},{"ancestorTitles":["formatErrorMessageForLine"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"formatErrorMessageForLine should include support contact information when needed","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151751,"status":"passed","title":"should include support contact information when needed"},{"ancestorTitles":["formatErrorMessageForLine"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"formatErrorMessageForLine should limit suggestions to 3 items for LINE display","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758279151751,"status":"passed","title":"should limit suggestions to 3 items for LINE display"},{"ancestorTitles":["createContextualErrorMessage"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"createContextualErrorMessage should create contextual error message with user information","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151751,"status":"passed","title":"should create contextual error message with user information"},{"ancestorTitles":["createContextualErrorMessage"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"createContextualErrorMessage should use intermediate level as default","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151752,"status":"passed","title":"should use intermediate level as default"}],"endTime":1758279151752,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/error-messages.test.ts","startTime":1758279151701,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ErrorRecoveryManager","handleError"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager handleError should handle network errors with retry strategy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151807,"status":"passed","title":"should handle network errors with retry strategy"},{"ancestorTitles":["ErrorRecoveryManager","handleError"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager handleError should handle session errors with session restart","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151809,"status":"passed","title":"should handle session errors with session restart"},{"ancestorTitles":["ErrorRecoveryManager","handleError"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager handleError should handle schedule conflicts with alternative suggestions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151810,"status":"passed","title":"should handle schedule conflicts with alternative suggestions"},{"ancestorTitles":["ErrorRecoveryManager","generateRecoveryActions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager generateRecoveryActions should generate retry actions for retryable errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151810,"status":"passed","title":"should generate retry actions for retryable errors"},{"ancestorTitles":["ErrorRecoveryManager","generateRecoveryActions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager generateRecoveryActions should generate rollback actions when rollback points exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151810,"status":"passed","title":"should generate rollback actions when rollback points exist"},{"ancestorTitles":["ErrorRecoveryManager","generateRecoveryActions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager generateRecoveryActions should sort actions by estimated success rate","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151810,"status":"passed","title":"should sort actions by estimated success rate"},{"ancestorTitles":["ErrorRecoveryManager","rollback functionality"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager rollback functionality should create and manage rollback points","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151811,"status":"passed","title":"should create and manage rollback points"},{"ancestorTitles":["ErrorRecoveryManager","rollback functionality"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager rollback functionality should rollback to last checkpoint","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151811,"status":"passed","title":"should rollback to last checkpoint"},{"ancestorTitles":["ErrorRecoveryManager","rollback functionality"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager rollback functionality should rollback to specific checkpoint","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151811,"status":"passed","title":"should rollback to specific checkpoint"},{"ancestorTitles":["ErrorRecoveryManager","rollback functionality"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager rollback functionality should limit rollback points to 5","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151811,"status":"passed","title":"should limit rollback points to 5"},{"ancestorTitles":["ErrorRecoveryManager","retry logic"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager retry logic should calculate retry delays with exponential backoff","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151812,"status":"passed","title":"should calculate retry delays with exponential backoff"},{"ancestorTitles":["ErrorRecoveryManager","retry logic"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager retry logic should respect maximum retry attempts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151812,"status":"passed","title":"should respect maximum retry attempts"},{"ancestorTitles":["ErrorRecoveryManager","recovery action execution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager recovery action execution should execute session restart action successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151813,"status":"passed","title":"should execute session restart action successfully"},{"ancestorTitles":["ErrorRecoveryManager","recovery action execution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager recovery action execution should execute rollback action successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151813,"status":"passed","title":"should execute rollback action successfully"},{"ancestorTitles":["ErrorRecoveryManager","cleanup"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ErrorRecoveryManager cleanup should clear rollback points for session","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151813,"status":"passed","title":"should clear rollback points for session"}],"endTime":1758279151814,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/error-recovery.test.ts","startTime":1758279151755,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Booking API contract","GET /api/slots"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract GET /api/slots returns 200 with { slots: [] } for basic GET without params","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151851,"status":"passed","title":"returns 200 with { slots: [] } for basic GET without params"},{"ancestorTitles":["Booking API contract","GET /api/slots"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract GET /api/slots returns non-empty slots with defaults (today, duration=30, SITE_TZ)","invocations":1,"location":null,"numPassingAsserts":83,"retryReasons":[],"startAt":1758279151860,"status":"passed","title":"returns non-empty slots with defaults (today, duration=30, SITE_TZ)"},{"ancestorTitles":["Booking API contract","GET /api/slots"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract GET /api/slots returns non-empty slots for date+duration+tz (Asia/Tokyo)","invocations":1,"location":null,"numPassingAsserts":51,"retryReasons":[],"startAt":1758279151865,"status":"passed","title":"returns non-empty slots for date+duration+tz (Asia/Tokyo)"},{"ancestorTitles":["Booking API contract","GET /api/slots"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract GET /api/slots returns 400 for invalid date format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151867,"status":"passed","title":"returns 400 for invalid date format"},{"ancestorTitles":["Booking API contract","GET /api/slots"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract GET /api/slots returns 400 for invalid duration (not in 15|30|45|60)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151868,"status":"passed","title":"returns 400 for invalid duration (not in 15|30|45|60)"},{"ancestorTitles":["Booking API contract","POST /api/book"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract POST /api/book returns 201 with {id, status:'confirmed'} when booking a free slot","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151868,"status":"passed","title":"returns 201 with {id, status:'confirmed'} when booking a free slot"},{"ancestorTitles":["Booking API contract","POST /api/book"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract POST /api/book returns 400 for invalid payload (missing fields / invalid email)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151870,"status":"passed","title":"returns 400 for invalid payload (missing fields / invalid email)"},{"ancestorTitles":["Booking API contract","POST /api/book"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract POST /api/book returns 409 when the slot is already booked (conflict)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151870,"status":"passed","title":"returns 409 when the slot is already booked (conflict)"},{"ancestorTitles":["Booking API contract","POST /api/book"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract POST /api/book returns 429 when rate limit is exceeded","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151871,"status":"passed","title":"returns 429 when rate limit is exceeded"}],"endTime":1758279151871,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/__tests__/contract/booking.test.js","startTime":1758279151819,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Error Classification System","generateErrorId"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System generateErrorId should generate unique error IDs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151907,"status":"passed","title":"should generate unique error IDs"},{"ancestorTitles":["Error Classification System","getErrorSeverity"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System getErrorSeverity should return correct severity for user input errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151907,"status":"passed","title":"should return correct severity for user input errors"},{"ancestorTitles":["Error Classification System","getErrorSeverity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System getErrorSeverity should return correct severity for system errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151907,"status":"passed","title":"should return correct severity for system errors"},{"ancestorTitles":["Error Classification System","getErrorSeverity"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System getErrorSeverity should return correct severity for external API errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151908,"status":"passed","title":"should return correct severity for external API errors"},{"ancestorTitles":["Error Classification System","getErrorSeverity"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System getErrorSeverity should return correct severity for authentication errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151908,"status":"passed","title":"should return correct severity for authentication errors"},{"ancestorTitles":["Error Classification System","createSystemError"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System createSystemError should create a complete SystemError object","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1758279151908,"status":"passed","title":"should create a complete SystemError object"},{"ancestorTitles":["Error Classification System","createSystemError"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System createSystemError should generate user-friendly messages from templates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151910,"status":"passed","title":"should generate user-friendly messages from templates"},{"ancestorTitles":["Error Classification System","createSystemError"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System createSystemError should include default recovery suggestions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758279151910,"status":"passed","title":"should include default recovery suggestions"},{"ancestorTitles":["Error Classification System","createSystemError"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System createSystemError should preserve original error information","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151910,"status":"passed","title":"should preserve original error information"},{"ancestorTitles":["Error Classification System","ERROR_MESSAGES"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System ERROR_MESSAGES should have messages for all critical error types","invocations":1,"location":null,"numPassingAsserts":24,"retryReasons":[],"startAt":1758279151911,"status":"passed","title":"should have messages for all critical error types"},{"ancestorTitles":["Error Classification System","DEFAULT_RECOVERY_SUGGESTIONS"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System DEFAULT_RECOVERY_SUGGESTIONS should provide recovery suggestions for network errors","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758279151911,"status":"passed","title":"should provide recovery suggestions for network errors"},{"ancestorTitles":["Error Classification System","DEFAULT_RECOVERY_SUGGESTIONS"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System DEFAULT_RECOVERY_SUGGESTIONS should provide appropriate suggestions for session errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151912,"status":"passed","title":"should provide appropriate suggestions for session errors"},{"ancestorTitles":["Error Classification System","DEFAULT_RECOVERY_SUGGESTIONS"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System DEFAULT_RECOVERY_SUGGESTIONS should provide conflict resolution for schedule conflicts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151912,"status":"passed","title":"should provide conflict resolution for schedule conflicts"},{"ancestorTitles":["Error Classification System","Error Type Coverage"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System Error Type Coverage should have all error types covered in severity mapping","invocations":1,"location":null,"numPassingAsserts":56,"retryReasons":[],"startAt":1758279151912,"status":"passed","title":"should have all error types covered in severity mapping"},{"ancestorTitles":["Error Classification System","Error Type Coverage"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Classification System Error Type Coverage should have recovery suggestions for major error types","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1758279151913,"status":"passed","title":"should have recovery suggestions for major error types"}],"endTime":1758279151914,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/errors.test.ts","startTime":1758279151875,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["EnhancedSessionManager","Session Creation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Session Creation should create a new session with initial checkpoint","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151974,"status":"passed","title":"should create a new session with initial checkpoint"},{"ancestorTitles":["EnhancedSessionManager","Session Creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Session Creation should create session with proper metadata","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151976,"status":"passed","title":"should create session with proper metadata"},{"ancestorTitles":["EnhancedSessionManager","Session Updates"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Session Updates should update session data successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758279151976,"status":"passed","title":"should update session data successfully"},{"ancestorTitles":["EnhancedSessionManager","Session Updates"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Session Updates should return false for non-existent session","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151976,"status":"passed","title":"should return false for non-existent session"},{"ancestorTitles":["EnhancedSessionManager","Checkpoint Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Checkpoint Management should create checkpoints successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151976,"status":"passed","title":"should create checkpoints successfully"},{"ancestorTitles":["EnhancedSessionManager","Checkpoint Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Checkpoint Management should restore session to checkpoint","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151977,"status":"passed","title":"should restore session to checkpoint"},{"ancestorTitles":["EnhancedSessionManager","Error Tracking"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Error Tracking should record session errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151979,"status":"passed","title":"should record session errors"},{"ancestorTitles":["EnhancedSessionManager","Error Tracking"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Error Tracking should mark errors as recovered","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151979,"status":"passed","title":"should mark errors as recovered"},{"ancestorTitles":["EnhancedSessionManager","Session Expiration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Session Expiration should return null for expired sessions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151979,"status":"passed","title":"should return null for expired sessions"},{"ancestorTitles":["EnhancedSessionManager","Backward Compatibility"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedSessionManager Backward Compatibility should maintain compatibility with legacy functions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151979,"status":"passed","title":"should maintain compatibility with legacy functions"},{"ancestorTitles":["Session Manager Utilities"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Session Manager Utilities should create session with checkpoint","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151980,"status":"passed","title":"should create session with checkpoint"},{"ancestorTitles":["Session Manager Utilities"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Session Manager Utilities should create operation checkpoint","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758279151980,"status":"passed","title":"should create operation checkpoint"}],"endTime":1758279151981,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/lib/__tests__/enhanced-session-manager.test.ts","startTime":1758279151919,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Booking API contract (TS legacy)"],"duration":null,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Booking API contract (TS legacy) migrated to JS","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758279152016,"status":"pending","title":"migrated to JS"}],"coverage":{},"endTime":1758279152018,"message":"","name":"/Volumes/Extreme Pro/dauberside.github.io-1/src/__tests__/contract/booking.test.ts","startTime":1758279152018,"status":"skipped","summary":""}],"wasInterrupted":false}
